{"ast":null,"code":"/**\n * dd-droppable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\nimport { DDManager } from './dd-manager';\nimport { DDBaseImplement } from './dd-base-impl';\nimport { Utils } from './utils';\nimport { isTouch, pointerenter, pointerleave } from './dd-touch';\n// let count = 0; // TEST\nexport class DDDroppable extends DDBaseImplement {\n  constructor(el, option = {}) {\n    super();\n    this.el = el;\n    this.option = option;\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseEnter = this._mouseEnter.bind(this);\n    this._mouseLeave = this._mouseLeave.bind(this);\n    this.enable();\n    this._setupAccept();\n  }\n  on(event, callback) {\n    super.on(event, callback);\n  }\n  off(event) {\n    super.off(event);\n  }\n  enable() {\n    if (this.disabled === false) return;\n    super.enable();\n    this.el.classList.add('ui-droppable');\n    this.el.classList.remove('ui-droppable-disabled');\n    this.el.addEventListener('mouseenter', this._mouseEnter);\n    this.el.addEventListener('mouseleave', this._mouseLeave);\n    if (isTouch) {\n      this.el.addEventListener('pointerenter', pointerenter);\n      this.el.addEventListener('pointerleave', pointerleave);\n    }\n  }\n  disable(forDestroy = false) {\n    if (this.disabled === true) return;\n    super.disable();\n    this.el.classList.remove('ui-droppable');\n    if (!forDestroy) this.el.classList.add('ui-droppable-disabled');\n    this.el.removeEventListener('mouseenter', this._mouseEnter);\n    this.el.removeEventListener('mouseleave', this._mouseLeave);\n    if (isTouch) {\n      this.el.removeEventListener('pointerenter', pointerenter);\n      this.el.removeEventListener('pointerleave', pointerleave);\n    }\n  }\n  destroy() {\n    this.disable(true);\n    this.el.classList.remove('ui-droppable');\n    this.el.classList.remove('ui-droppable-disabled');\n    super.destroy();\n  }\n  updateOption(opts) {\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    this._setupAccept();\n    return this;\n  }\n  /** @internal called when the cursor enters our area - prepare for a possible drop and track leaving */\n  _mouseEnter(e) {\n    // console.log(`${count++} Enter ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST\n    if (!DDManager.dragElement) return;\n    if (!this._canDrop(DDManager.dragElement.el)) return;\n    e.preventDefault();\n    e.stopPropagation();\n    // make sure when we enter this, that the last one gets a leave FIRST to correctly cleanup as we don't always do\n    if (DDManager.dropElement && DDManager.dropElement !== this) {\n      DDManager.dropElement._mouseLeave(e, true); // calledByEnter = true\n    }\n    DDManager.dropElement = this;\n    const ev = Utils.initEvent(e, {\n      target: this.el,\n      type: 'dropover'\n    });\n    if (this.option.over) {\n      this.option.over(ev, this._ui(DDManager.dragElement));\n    }\n    this.triggerEvent('dropover', ev);\n    this.el.classList.add('ui-droppable-over');\n    // console.log('tracking'); // TEST\n  }\n  /** @internal called when the item is leaving our area, stop tracking if we had moving item */\n  _mouseLeave(e, calledByEnter = false) {\n    // console.log(`${count++} Leave ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST\n    if (!DDManager.dragElement || DDManager.dropElement !== this) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const ev = Utils.initEvent(e, {\n      target: this.el,\n      type: 'dropout'\n    });\n    if (this.option.out) {\n      this.option.out(ev, this._ui(DDManager.dragElement));\n    }\n    this.triggerEvent('dropout', ev);\n    if (DDManager.dropElement === this) {\n      delete DDManager.dropElement;\n      // console.log('not tracking'); // TEST\n      // if we're still over a parent droppable, send it an enter as we don't get one from leaving nested children\n      if (!calledByEnter) {\n        let parentDrop;\n        let parent = this.el.parentElement;\n        while (!parentDrop && parent) {\n          parentDrop = parent.ddElement?.ddDroppable;\n          parent = parent.parentElement;\n        }\n        if (parentDrop) {\n          parentDrop._mouseEnter(e);\n        }\n      }\n    }\n  }\n  /** item is being dropped on us - called by the drag mouseup handler - this calls the client drop event */\n  drop(e) {\n    e.preventDefault();\n    const ev = Utils.initEvent(e, {\n      target: this.el,\n      type: 'drop'\n    });\n    if (this.option.drop) {\n      this.option.drop(ev, this._ui(DDManager.dragElement));\n    }\n    this.triggerEvent('drop', ev);\n  }\n  /** @internal true if element matches the string/method accept option */\n  _canDrop(el) {\n    return el && (!this.accept || this.accept(el));\n  }\n  /** @internal */\n  _setupAccept() {\n    if (!this.option.accept) return this;\n    if (typeof this.option.accept === 'string') {\n      this.accept = el => el.classList.contains(this.option.accept) || el.matches(this.option.accept);\n    } else {\n      this.accept = this.option.accept;\n    }\n    return this;\n  }\n  /** @internal */\n  _ui(drag) {\n    return {\n      draggable: drag.el,\n      ...drag.ui()\n    };\n  }\n}","map":{"version":3,"names":["DDManager","DDBaseImplement","Utils","isTouch","pointerenter","pointerleave","DDDroppable","constructor","el","option","_mouseEnter","bind","_mouseLeave","enable","_setupAccept","on","event","callback","off","disabled","classList","add","remove","addEventListener","disable","forDestroy","removeEventListener","destroy","updateOption","opts","Object","keys","forEach","key","e","dragElement","_canDrop","preventDefault","stopPropagation","dropElement","ev","initEvent","target","type","over","_ui","triggerEvent","calledByEnter","out","parentDrop","parent","parentElement","ddElement","ddDroppable","drop","accept","contains","matches","drag","draggable","ui"],"sources":["/Users/luis01/Desktop/MATINF/Asignaturas/Proyecto_Software/battleship/app_web/frontend/node_modules/gridstack/src/dd-droppable.ts"],"sourcesContent":["/**\n * dd-droppable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\n\nimport { DDDraggable } from './dd-draggable';\nimport { DDManager } from './dd-manager';\nimport { DDBaseImplement, HTMLElementExtendOpt } from './dd-base-impl';\nimport { Utils } from './utils';\nimport { DDElementHost } from './dd-element';\nimport { isTouch, pointerenter, pointerleave } from './dd-touch';\nimport { DDUIData } from './types';\n\nexport interface DDDroppableOpt {\n  accept?: string | ((el: HTMLElement) => boolean);\n  drop?: (event: DragEvent, ui: DDUIData) => void;\n  over?: (event: DragEvent, ui: DDUIData) => void;\n  out?: (event: DragEvent, ui: DDUIData) => void;\n}\n\n// let count = 0; // TEST\n\nexport class DDDroppable extends DDBaseImplement implements HTMLElementExtendOpt<DDDroppableOpt> {\n\n  public accept: (el: HTMLElement) => boolean;\n\n  constructor(public el: HTMLElement, public option: DDDroppableOpt = {}) {\n    super();\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseEnter = this._mouseEnter.bind(this);\n    this._mouseLeave = this._mouseLeave.bind(this);\n    this.enable();\n    this._setupAccept();\n  }\n\n  public on(event: 'drop' | 'dropover' | 'dropout', callback: (event: DragEvent) => void): void {\n    super.on(event, callback);\n  }\n\n  public off(event: 'drop' | 'dropover' | 'dropout'): void {\n    super.off(event);\n  }\n\n  public enable(): void {\n    if (this.disabled === false) return;\n    super.enable();\n    this.el.classList.add('ui-droppable');\n    this.el.classList.remove('ui-droppable-disabled');\n    this.el.addEventListener('mouseenter', this._mouseEnter);\n    this.el.addEventListener('mouseleave', this._mouseLeave);\n    if (isTouch) {\n      this.el.addEventListener('pointerenter', pointerenter);\n      this.el.addEventListener('pointerleave', pointerleave);\n    }\n  }\n\n  public disable(forDestroy = false): void {\n    if (this.disabled === true) return;\n    super.disable();\n    this.el.classList.remove('ui-droppable');\n    if (!forDestroy) this.el.classList.add('ui-droppable-disabled');\n    this.el.removeEventListener('mouseenter', this._mouseEnter);\n    this.el.removeEventListener('mouseleave', this._mouseLeave);\n    if (isTouch) {\n      this.el.removeEventListener('pointerenter', pointerenter);\n      this.el.removeEventListener('pointerleave', pointerleave);\n    }\n  }\n\n  public destroy(): void {\n    this.disable(true);\n    this.el.classList.remove('ui-droppable');\n    this.el.classList.remove('ui-droppable-disabled');\n    super.destroy();\n  }\n\n  public updateOption(opts: DDDroppableOpt): DDDroppable {\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    this._setupAccept();\n    return this;\n  }\n\n  /** @internal called when the cursor enters our area - prepare for a possible drop and track leaving */\n  protected _mouseEnter(e: MouseEvent): void {\n    // console.log(`${count++} Enter ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST\n    if (!DDManager.dragElement) return;\n    if (!this._canDrop(DDManager.dragElement.el)) return;\n    e.preventDefault();\n    e.stopPropagation();\n\n    // make sure when we enter this, that the last one gets a leave FIRST to correctly cleanup as we don't always do\n    if (DDManager.dropElement && DDManager.dropElement !== this) {\n      DDManager.dropElement._mouseLeave(e as DragEvent, true); // calledByEnter = true\n    }\n    DDManager.dropElement = this;\n\n    const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'dropover' });\n    if (this.option.over) {\n      this.option.over(ev, this._ui(DDManager.dragElement))\n    }\n    this.triggerEvent('dropover', ev);\n    this.el.classList.add('ui-droppable-over');\n    // console.log('tracking'); // TEST\n  }\n\n  /** @internal called when the item is leaving our area, stop tracking if we had moving item */\n  protected _mouseLeave(e: MouseEvent, calledByEnter = false): void {\n    // console.log(`${count++} Leave ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST\n    if (!DDManager.dragElement || DDManager.dropElement !== this) return;\n    e.preventDefault();\n    e.stopPropagation();\n\n    const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'dropout' });\n    if (this.option.out) {\n      this.option.out(ev, this._ui(DDManager.dragElement))\n    }\n    this.triggerEvent('dropout', ev);\n\n    if (DDManager.dropElement === this) {\n      delete DDManager.dropElement;\n      // console.log('not tracking'); // TEST\n\n      // if we're still over a parent droppable, send it an enter as we don't get one from leaving nested children\n      if (!calledByEnter) {\n        let parentDrop: DDDroppable;\n        let parent: DDElementHost = this.el.parentElement;\n        while (!parentDrop && parent) {\n          parentDrop = parent.ddElement?.ddDroppable;\n          parent = parent.parentElement;\n        }\n        if (parentDrop) {\n          parentDrop._mouseEnter(e);\n        }\n      }\n    }\n  }\n\n  /** item is being dropped on us - called by the drag mouseup handler - this calls the client drop event */\n  public drop(e: MouseEvent): void {\n    e.preventDefault();\n    const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'drop' });\n    if (this.option.drop) {\n      this.option.drop(ev, this._ui(DDManager.dragElement))\n    }\n    this.triggerEvent('drop', ev);\n  }\n\n  /** @internal true if element matches the string/method accept option */\n  protected _canDrop(el: HTMLElement): boolean {\n    return el && (!this.accept || this.accept(el));\n  }\n\n  /** @internal */\n  protected _setupAccept(): DDDroppable {\n    if (!this.option.accept) return this;\n    if (typeof this.option.accept === 'string') {\n      this.accept = (el: HTMLElement) => el.classList.contains(this.option.accept as string) || el.matches(this.option.accept as string);\n    } else {\n      this.accept = this.option.accept;\n    }\n    return this;\n  }\n\n  /** @internal */\n  protected _ui(drag: DDDraggable): DDUIData {\n    return {\n      draggable: drag.el,\n      ...drag.ui()\n    };\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}