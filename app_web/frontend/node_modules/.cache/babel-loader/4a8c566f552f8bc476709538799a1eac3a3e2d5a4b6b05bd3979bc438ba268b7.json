{"ast":null,"code":"/**\n * utils.ts 10.1.1\n * Copyright (c) 2021 Alain Dumesny - see GridStack root license\n */\n/** checks for obsolete method names */\n// eslint-disable-next-line\nexport function obsolete(self, f, oldName, newName, rev) {\n  let wrapper = (...args) => {\n    console.warn('gridstack.js: Function `' + oldName + '` is deprecated in ' + rev + ' and has been replaced ' + 'with `' + newName + '`. It will be **removed** in a future release');\n    return f.apply(self, args);\n  };\n  wrapper.prototype = f.prototype;\n  return wrapper;\n}\n/** checks for obsolete grid options (can be used for any fields, but msg is about options) */\nexport function obsoleteOpts(opts, oldName, newName, rev) {\n  if (opts[oldName] !== undefined) {\n    opts[newName] = opts[oldName];\n    console.warn('gridstack.js: Option `' + oldName + '` is deprecated in ' + rev + ' and has been replaced with `' + newName + '`. It will be **removed** in a future release');\n  }\n}\n/** checks for obsolete grid options which are gone */\nexport function obsoleteOptsDel(opts, oldName, rev, info) {\n  if (opts[oldName] !== undefined) {\n    console.warn('gridstack.js: Option `' + oldName + '` is deprecated in ' + rev + info);\n  }\n}\n/** checks for obsolete Jquery element attributes */\nexport function obsoleteAttr(el, oldName, newName, rev) {\n  let oldAttr = el.getAttribute(oldName);\n  if (oldAttr !== null) {\n    el.setAttribute(newName, oldAttr);\n    console.warn('gridstack.js: attribute `' + oldName + '`=' + oldAttr + ' is deprecated on this object in ' + rev + ' and has been replaced with `' + newName + '`. It will be **removed** in a future release');\n  }\n}\n/**\n * Utility methods\n */\nexport class Utils {\n  /** convert a potential selector into actual list of html elements. optional root which defaults to document (for shadow dom) */\n  static getElements(els, root = document) {\n    if (typeof els === 'string') {\n      const doc = 'getElementById' in root ? root : undefined;\n      // Note: very common for people use to id='1,2,3' which is only legal as HTML5 id, but not CSS selectors\n      // so if we start with a number, assume it's an id and just return that one item...\n      // see https://github.com/gridstack/gridstack.js/issues/2234#issuecomment-1523796562\n      if (doc && !isNaN(+els[0])) {\n        // start with digit\n        const el = doc.getElementById(els);\n        return el ? [el] : [];\n      }\n      let list = root.querySelectorAll(els);\n      if (!list.length && els[0] !== '.' && els[0] !== '#') {\n        list = root.querySelectorAll('.' + els);\n        if (!list.length) {\n          list = root.querySelectorAll('#' + els);\n        }\n      }\n      return Array.from(list);\n    }\n    return [els];\n  }\n  /** convert a potential selector into actual single element. optional root which defaults to document (for shadow dom) */\n  static getElement(els, root = document) {\n    if (typeof els === 'string') {\n      const doc = 'getElementById' in root ? root : undefined;\n      if (!els.length) return null;\n      if (doc && els[0] === '#') {\n        return doc.getElementById(els.substring(1));\n      }\n      if (els[0] === '#' || els[0] === '.' || els[0] === '[') {\n        return root.querySelector(els);\n      }\n      // if we start with a digit, assume it's an id (error calling querySelector('#1')) as class are not valid CSS\n      if (doc && !isNaN(+els[0])) {\n        // start with digit\n        return doc.getElementById(els);\n      }\n      // finally try string, then id, then class\n      let el = root.querySelector(els);\n      if (doc && !el) {\n        el = doc.getElementById(els);\n      }\n      if (!el) {\n        el = root.querySelector('.' + els);\n      }\n      return el;\n    }\n    return els;\n  }\n  /** true if we should resize to content. strict=true when only 'sizeToContent:true' and not a number which lets user adjust */\n  static shouldSizeToContent(n, strict = false) {\n    return n?.grid && (strict ? n.sizeToContent === true || n.grid.opts.sizeToContent === true && n.sizeToContent === undefined : !!n.sizeToContent || n.grid.opts.sizeToContent && n.sizeToContent !== false);\n  }\n  /** returns true if a and b overlap */\n  static isIntercepted(a, b) {\n    return !(a.y >= b.y + b.h || a.y + a.h <= b.y || a.x + a.w <= b.x || a.x >= b.x + b.w);\n  }\n  /** returns true if a and b touch edges or corners */\n  static isTouching(a, b) {\n    return Utils.isIntercepted(a, {\n      x: b.x - 0.5,\n      y: b.y - 0.5,\n      w: b.w + 1,\n      h: b.h + 1\n    });\n  }\n  /** returns the area a and b overlap */\n  static areaIntercept(a, b) {\n    let x0 = a.x > b.x ? a.x : b.x;\n    let x1 = a.x + a.w < b.x + b.w ? a.x + a.w : b.x + b.w;\n    if (x1 <= x0) return 0; // no overlap\n    let y0 = a.y > b.y ? a.y : b.y;\n    let y1 = a.y + a.h < b.y + b.h ? a.y + a.h : b.y + b.h;\n    if (y1 <= y0) return 0; // no overlap\n    return (x1 - x0) * (y1 - y0);\n  }\n  /** returns the area */\n  static area(a) {\n    return a.w * a.h;\n  }\n  /**\n   * Sorts array of nodes\n   * @param nodes array to sort\n   * @param dir 1 for asc, -1 for desc (optional)\n   * @param width width of the grid. If undefined the width will be calculated automatically (optional).\n   **/\n  static sort(nodes, dir = 1, column) {\n    column = column || nodes.reduce((col, n) => Math.max(n.x + n.w, col), 0) || 12;\n    if (dir === -1) return nodes.sort((a, b) => (b.x ?? 1000) + (b.y ?? 1000) * column - ((a.x ?? 1000) + (a.y ?? 1000) * column));else return nodes.sort((b, a) => (b.x ?? 1000) + (b.y ?? 1000) * column - ((a.x ?? 1000) + (a.y ?? 1000) * column));\n  }\n  /** find an item by id */\n  static find(nodes, id) {\n    return id ? nodes.find(n => n.id === id) : undefined;\n  }\n  /**\n   * creates a style sheet with style id under given parent\n   * @param id will set the 'gs-style-id' attribute to that id\n   * @param parent to insert the stylesheet as first child,\n   * if none supplied it will be appended to the document head instead.\n   */\n  static createStylesheet(id, parent, options) {\n    let style = document.createElement('style');\n    const nonce = options?.nonce;\n    if (nonce) style.nonce = nonce;\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('gs-style-id', id);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (style.styleSheet) {\n      // TODO: only CSSImportRule have that and different beast ??\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      style.styleSheet.cssText = '';\n    } else {\n      style.appendChild(document.createTextNode('')); // WebKit hack\n    }\n    if (!parent) {\n      // default to head\n      parent = document.getElementsByTagName('head')[0];\n      parent.appendChild(style);\n    } else {\n      parent.insertBefore(style, parent.firstChild);\n    }\n    return style.sheet;\n  }\n  /** removed the given stylesheet id */\n  static removeStylesheet(id, parent) {\n    const target = parent || document;\n    let el = target.querySelector('STYLE[gs-style-id=' + id + ']');\n    if (el && el.parentNode) el.remove();\n  }\n  /** inserts a CSS rule */\n  static addCSSRule(sheet, selector, rules) {\n    if (typeof sheet.addRule === 'function') {\n      sheet.addRule(selector, rules);\n    } else if (typeof sheet.insertRule === 'function') {\n      sheet.insertRule(`${selector}{${rules}}`);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static toBool(v) {\n    if (typeof v === 'boolean') {\n      return v;\n    }\n    if (typeof v === 'string') {\n      v = v.toLowerCase();\n      return !(v === '' || v === 'no' || v === 'false' || v === '0');\n    }\n    return Boolean(v);\n  }\n  static toNumber(value) {\n    return value === null || value.length === 0 ? undefined : Number(value);\n  }\n  static parseHeight(val) {\n    let h;\n    let unit = 'px';\n    if (typeof val === 'string') {\n      if (val === 'auto' || val === '') h = 0;else {\n        let match = val.match(/^(-[0-9]+\\.[0-9]+|[0-9]*\\.[0-9]+|-[0-9]+|[0-9]+)(px|em|rem|vh|vw|%|cm|mm)?$/);\n        if (!match) {\n          throw new Error(`Invalid height val = ${val}`);\n        }\n        unit = match[2] || 'px';\n        h = parseFloat(match[1]);\n      }\n    } else {\n      h = val;\n    }\n    return {\n      h,\n      unit\n    };\n  }\n  /** copies unset fields in target to use the given default sources values */\n  // eslint-disable-next-line\n  static defaults(target, ...sources) {\n    sources.forEach(source => {\n      for (const key in source) {\n        if (!source.hasOwnProperty(key)) return;\n        if (target[key] === null || target[key] === undefined) {\n          target[key] = source[key];\n        } else if (typeof source[key] === 'object' && typeof target[key] === 'object') {\n          // property is an object, recursively add it's field over... #1373\n          this.defaults(target[key], source[key]);\n        }\n      }\n    });\n    return target;\n  }\n  /** given 2 objects return true if they have the same values. Checks for Object {} having same fields and values (just 1 level down) */\n  static same(a, b) {\n    if (typeof a !== 'object') return a == b;\n    if (typeof a !== typeof b) return false;\n    // else we have object, check just 1 level deep for being same things...\n    if (Object.keys(a).length !== Object.keys(b).length) return false;\n    for (const key in a) {\n      if (a[key] !== b[key]) return false;\n    }\n    return true;\n  }\n  /** copies over b size & position (GridStackPosition), and optionally min/max as well */\n  static copyPos(a, b, doMinMax = false) {\n    if (b.x !== undefined) a.x = b.x;\n    if (b.y !== undefined) a.y = b.y;\n    if (b.w !== undefined) a.w = b.w;\n    if (b.h !== undefined) a.h = b.h;\n    if (doMinMax) {\n      if (b.minW) a.minW = b.minW;\n      if (b.minH) a.minH = b.minH;\n      if (b.maxW) a.maxW = b.maxW;\n      if (b.maxH) a.maxH = b.maxH;\n    }\n    return a;\n  }\n  /** true if a and b has same size & position */\n  static samePos(a, b) {\n    return a && b && a.x === b.x && a.y === b.y && (a.w || 1) === (b.w || 1) && (a.h || 1) === (b.h || 1);\n  }\n  /** given a node, makes sure it's min/max are valid */\n  static sanitizeMinMax(node) {\n    // remove 0, undefine, null\n    if (!node.minW) {\n      delete node.minW;\n    }\n    if (!node.minH) {\n      delete node.minH;\n    }\n    if (!node.maxW) {\n      delete node.maxW;\n    }\n    if (!node.maxH) {\n      delete node.maxH;\n    }\n  }\n  /** removes field from the first object if same as the second objects (like diffing) and internal '_' for saving */\n  static removeInternalAndSame(a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object') return;\n    for (let key in a) {\n      let val = a[key];\n      if (key[0] === '_' || val === b[key]) {\n        delete a[key];\n      } else if (val && typeof val === 'object' && b[key] !== undefined) {\n        for (let i in val) {\n          if (val[i] === b[key][i] || i[0] === '_') {\n            delete val[i];\n          }\n        }\n        if (!Object.keys(val).length) {\n          delete a[key];\n        }\n      }\n    }\n  }\n  /** removes internal fields '_' and default values for saving */\n  static removeInternalForSave(n, removeEl = true) {\n    for (let key in n) {\n      if (key[0] === '_' || n[key] === null || n[key] === undefined) delete n[key];\n    }\n    delete n.grid;\n    if (removeEl) delete n.el;\n    // delete default values (will be re-created on read)\n    if (!n.autoPosition) delete n.autoPosition;\n    if (!n.noResize) delete n.noResize;\n    if (!n.noMove) delete n.noMove;\n    if (!n.locked) delete n.locked;\n    if (n.w === 1 || n.w === n.minW) delete n.w;\n    if (n.h === 1 || n.h === n.minH) delete n.h;\n  }\n  /** return the closest parent (or itself) matching the given class */\n  // static closestUpByClass(el: HTMLElement, name: string): HTMLElement {\n  //   while (el) {\n  //     if (el.classList.contains(name)) return el;\n  //     el = el.parentElement\n  //   }\n  //   return null;\n  // }\n  /** delay calling the given function for given delay, preventing new calls from happening while waiting */\n  static throttle(func, delay) {\n    let isWaiting = false;\n    return (...args) => {\n      if (!isWaiting) {\n        isWaiting = true;\n        setTimeout(() => {\n          func(...args);\n          isWaiting = false;\n        }, delay);\n      }\n    };\n  }\n  static removePositioningStyles(el) {\n    let style = el.style;\n    if (style.position) {\n      style.removeProperty('position');\n    }\n    if (style.left) {\n      style.removeProperty('left');\n    }\n    if (style.top) {\n      style.removeProperty('top');\n    }\n    if (style.width) {\n      style.removeProperty('width');\n    }\n    if (style.height) {\n      style.removeProperty('height');\n    }\n  }\n  /** @internal returns the passed element if scrollable, else the closest parent that will, up to the entire document scrolling element */\n  static getScrollElement(el) {\n    if (!el) return document.scrollingElement || document.documentElement; // IE support\n    const style = getComputedStyle(el);\n    const overflowRegex = /(auto|scroll)/;\n    if (overflowRegex.test(style.overflow + style.overflowY)) {\n      return el;\n    } else {\n      return this.getScrollElement(el.parentElement);\n    }\n  }\n  /** @internal */\n  static updateScrollPosition(el, position, distance) {\n    // is widget in view?\n    let rect = el.getBoundingClientRect();\n    let innerHeightOrClientHeight = window.innerHeight || document.documentElement.clientHeight;\n    if (rect.top < 0 || rect.bottom > innerHeightOrClientHeight) {\n      // set scrollTop of first parent that scrolls\n      // if parent is larger than el, set as low as possible\n      // to get entire widget on screen\n      let offsetDiffDown = rect.bottom - innerHeightOrClientHeight;\n      let offsetDiffUp = rect.top;\n      let scrollEl = this.getScrollElement(el);\n      if (scrollEl !== null) {\n        let prevScroll = scrollEl.scrollTop;\n        if (rect.top < 0 && distance < 0) {\n          // moving up\n          if (el.offsetHeight > innerHeightOrClientHeight) {\n            scrollEl.scrollTop += distance;\n          } else {\n            scrollEl.scrollTop += Math.abs(offsetDiffUp) > Math.abs(distance) ? distance : offsetDiffUp;\n          }\n        } else if (distance > 0) {\n          // moving down\n          if (el.offsetHeight > innerHeightOrClientHeight) {\n            scrollEl.scrollTop += distance;\n          } else {\n            scrollEl.scrollTop += offsetDiffDown > distance ? distance : offsetDiffDown;\n          }\n        }\n        // move widget y by amount scrolled\n        position.top += scrollEl.scrollTop - prevScroll;\n      }\n    }\n  }\n  /**\n   * @internal Function used to scroll the page.\n   *\n   * @param event `MouseEvent` that triggers the resize\n   * @param el `HTMLElement` that's being resized\n   * @param distance Distance from the V edges to start scrolling\n   */\n  static updateScrollResize(event, el, distance) {\n    const scrollEl = this.getScrollElement(el);\n    const height = scrollEl.clientHeight;\n    // #1727 event.clientY is relative to viewport, so must compare this against position of scrollEl getBoundingClientRect().top\n    // #1745 Special situation if scrollEl is document 'html': here browser spec states that\n    // clientHeight is height of viewport, but getBoundingClientRect() is rectangle of html element;\n    // this discrepancy arises because in reality scrollbar is attached to viewport, not html element itself.\n    const offsetTop = scrollEl === this.getScrollElement() ? 0 : scrollEl.getBoundingClientRect().top;\n    const pointerPosY = event.clientY - offsetTop;\n    const top = pointerPosY < distance;\n    const bottom = pointerPosY > height - distance;\n    if (top) {\n      // This also can be done with a timeout to keep scrolling while the mouse is\n      // in the scrolling zone. (will have smoother behavior)\n      scrollEl.scrollBy({\n        behavior: 'smooth',\n        top: pointerPosY - distance\n      });\n    } else if (bottom) {\n      scrollEl.scrollBy({\n        behavior: 'smooth',\n        top: distance - (height - pointerPosY)\n      });\n    }\n  }\n  /** single level clone, returning a new object with same top fields. This will share sub objects and arrays */\n  static clone(obj) {\n    if (obj === null || obj === undefined || typeof obj !== 'object') {\n      return obj;\n    }\n    // return Object.assign({}, obj);\n    if (obj instanceof Array) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return [...obj];\n    }\n    return {\n      ...obj\n    };\n  }\n  /**\n   * Recursive clone version that returns a full copy, checking for nested objects and arrays ONLY.\n   * Note: this will use as-is any key starting with double __ (and not copy inside) some lib have circular dependencies.\n   */\n  static cloneDeep(obj) {\n    // list of fields we will skip during cloneDeep (nested objects, other internal)\n    const skipFields = ['parentGrid', 'el', 'grid', 'subGrid', 'engine'];\n    // return JSON.parse(JSON.stringify(obj)); // doesn't work with date format ?\n    const ret = Utils.clone(obj);\n    for (const key in ret) {\n      // NOTE: we don't support function/circular dependencies so skip those properties for now...\n      if (ret.hasOwnProperty(key) && typeof ret[key] === 'object' && key.substring(0, 2) !== '__' && !skipFields.find(k => k === key)) {\n        ret[key] = Utils.cloneDeep(obj[key]);\n      }\n    }\n    return ret;\n  }\n  /** deep clone the given HTML node, removing teh unique id field */\n  static cloneNode(el) {\n    const node = el.cloneNode(true);\n    node.removeAttribute('id');\n    return node;\n  }\n  static appendTo(el, parent) {\n    let parentNode;\n    if (typeof parent === 'string') {\n      parentNode = Utils.getElement(parent);\n    } else {\n      parentNode = parent;\n    }\n    if (parentNode) {\n      parentNode.appendChild(el);\n    }\n  }\n  // public static setPositionRelative(el: HTMLElement): void {\n  //   if (!(/^(?:r|a|f)/).test(getComputedStyle(el).position)) {\n  //     el.style.position = \"relative\";\n  //   }\n  // }\n  static addElStyles(el, styles) {\n    if (styles instanceof Object) {\n      for (const s in styles) {\n        if (styles.hasOwnProperty(s)) {\n          if (Array.isArray(styles[s])) {\n            // support fallback value\n            styles[s].forEach(val => {\n              el.style[s] = val;\n            });\n          } else {\n            el.style[s] = styles[s];\n          }\n        }\n      }\n    }\n  }\n  static initEvent(e, info) {\n    const evt = {\n      type: info.type\n    };\n    const obj = {\n      button: 0,\n      which: 0,\n      buttons: 1,\n      bubbles: true,\n      cancelable: true,\n      target: info.target ? info.target : e.target\n    };\n    // don't check for `instanceof DragEvent` as Safari use MouseEvent #1540\n    if (e.dataTransfer) {\n      evt['dataTransfer'] = e.dataTransfer; // workaround 'readonly' field.\n    }\n    ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].forEach(p => evt[p] = e[p]); // keys\n    ['pageX', 'pageY', 'clientX', 'clientY', 'screenX', 'screenY'].forEach(p => evt[p] = e[p]); // point info\n    return {\n      ...evt,\n      ...obj\n    };\n  }\n  /** copies the MouseEvent properties and sends it as another event to the given target */\n  static simulateMouseEvent(e, simulatedType, target) {\n    const simulatedEvent = document.createEvent('MouseEvents');\n    simulatedEvent.initMouseEvent(simulatedType,\n    // type\n    true,\n    // bubbles\n    true,\n    // cancelable\n    window,\n    // view\n    1,\n    // detail\n    e.screenX,\n    // screenX\n    e.screenY,\n    // screenY\n    e.clientX,\n    // clientX\n    e.clientY,\n    // clientY\n    e.ctrlKey,\n    // ctrlKey\n    e.altKey,\n    // altKey\n    e.shiftKey,\n    // shiftKey\n    e.metaKey,\n    // metaKey\n    0,\n    // button\n    e.target // relatedTarget\n    );\n    (target || e.target).dispatchEvent(simulatedEvent);\n  }\n  /**\n   * defines an element that is used to get the offset and scale from grid transforms\n   * returns the scale and offsets from said element\n  */\n  static getValuesFromTransformedElement(parent) {\n    const transformReference = document.createElement('div');\n    Utils.addElStyles(transformReference, {\n      opacity: '0',\n      position: 'fixed',\n      top: 0 + 'px',\n      left: 0 + 'px',\n      width: '1px',\n      height: '1px',\n      zIndex: '-999999'\n    });\n    parent.appendChild(transformReference);\n    const transformValues = transformReference.getBoundingClientRect();\n    parent.removeChild(transformReference);\n    transformReference.remove();\n    return {\n      xScale: 1 / transformValues.width,\n      yScale: 1 / transformValues.height,\n      xOffset: transformValues.left,\n      yOffset: transformValues.top\n    };\n  }\n}","map":{"version":3,"names":["obsolete","self","f","oldName","newName","rev","wrapper","args","console","warn","apply","prototype","obsoleteOpts","opts","undefined","obsoleteOptsDel","info","obsoleteAttr","el","oldAttr","getAttribute","setAttribute","Utils","getElements","els","root","document","doc","isNaN","getElementById","list","querySelectorAll","length","Array","from","getElement","substring","querySelector","shouldSizeToContent","n","strict","grid","sizeToContent","isIntercepted","a","b","y","h","x","w","isTouching","areaIntercept","x0","x1","y0","y1","area","sort","nodes","dir","column","reduce","col","Math","max","find","id","createStylesheet","parent","options","style","createElement","nonce","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","insertBefore","firstChild","sheet","removeStylesheet","target","parentNode","remove","addCSSRule","selector","rules","addRule","insertRule","toBool","v","toLowerCase","Boolean","toNumber","value","Number","parseHeight","val","unit","match","Error","parseFloat","defaults","sources","forEach","source","key","hasOwnProperty","same","Object","keys","copyPos","doMinMax","minW","minH","maxW","maxH","samePos","sanitizeMinMax","node","removeInternalAndSame","i","removeInternalForSave","removeEl","autoPosition","noResize","noMove","locked","throttle","func","delay","isWaiting","setTimeout","removePositioningStyles","position","removeProperty","left","top","width","height","getScrollElement","scrollingElement","documentElement","getComputedStyle","overflowRegex","test","overflow","overflowY","parentElement","updateScrollPosition","distance","rect","getBoundingClientRect","innerHeightOrClientHeight","window","innerHeight","clientHeight","bottom","offsetDiffDown","offsetDiffUp","scrollEl","prevScroll","scrollTop","offsetHeight","abs","updateScrollResize","event","offsetTop","pointerPosY","clientY","scrollBy","behavior","clone","obj","cloneDeep","skipFields","ret","k","cloneNode","removeAttribute","appendTo","addElStyles","styles","s","isArray","initEvent","e","evt","type","button","which","buttons","bubbles","cancelable","dataTransfer","p","simulateMouseEvent","simulatedType","simulatedEvent","createEvent","initMouseEvent","screenX","screenY","clientX","ctrlKey","altKey","shiftKey","metaKey","dispatchEvent","getValuesFromTransformedElement","transformReference","opacity","zIndex","transformValues","removeChild","xScale","yScale","xOffset","yOffset"],"sources":["/Users/luis01/Desktop/MATINF/Asignaturas/Proyecto_Software/battleship/app_web/frontend/node_modules/gridstack/src/utils.ts"],"sourcesContent":["/**\r\n * utils.ts 10.1.1\r\n * Copyright (c) 2021 Alain Dumesny - see GridStack root license\r\n */\r\n\r\nimport { GridStackElement, GridStackNode, GridStackOptions, numberOrString, GridStackPosition, GridStackWidget } from './types';\r\n\r\nexport interface HeightData {\r\n  h: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface DragTransform {\r\n  xScale: number;\r\n  yScale: number;\r\n  xOffset: number;\r\n  yOffset: number;\r\n}\r\n\r\n/** checks for obsolete method names */\r\n// eslint-disable-next-line\r\nexport function obsolete(self, f, oldName: string, newName: string, rev: string): (...args: any[]) => any {\r\n  let wrapper = (...args) => {\r\n    console.warn('gridstack.js: Function `' + oldName + '` is deprecated in ' + rev + ' and has been replaced ' +\r\n    'with `' + newName + '`. It will be **removed** in a future release');\r\n    return f.apply(self, args);\r\n  }\r\n  wrapper.prototype = f.prototype;\r\n  return wrapper;\r\n}\r\n\r\n/** checks for obsolete grid options (can be used for any fields, but msg is about options) */\r\nexport function obsoleteOpts(opts: GridStackOptions, oldName: string, newName: string, rev: string): void {\r\n  if (opts[oldName] !== undefined) {\r\n    opts[newName] = opts[oldName];\r\n    console.warn('gridstack.js: Option `' + oldName + '` is deprecated in ' + rev + ' and has been replaced with `' +\r\n      newName + '`. It will be **removed** in a future release');\r\n  }\r\n}\r\n\r\n/** checks for obsolete grid options which are gone */\r\nexport function obsoleteOptsDel(opts: GridStackOptions, oldName: string, rev: string, info: string): void {\r\n  if (opts[oldName] !== undefined) {\r\n    console.warn('gridstack.js: Option `' + oldName + '` is deprecated in ' + rev + info);\r\n  }\r\n}\r\n\r\n/** checks for obsolete Jquery element attributes */\r\nexport function obsoleteAttr(el: HTMLElement, oldName: string, newName: string, rev: string): void {\r\n  let oldAttr = el.getAttribute(oldName);\r\n  if (oldAttr !== null) {\r\n    el.setAttribute(newName, oldAttr);\r\n    console.warn('gridstack.js: attribute `' + oldName + '`=' + oldAttr + ' is deprecated on this object in ' + rev + ' and has been replaced with `' +\r\n      newName + '`. It will be **removed** in a future release');\r\n  }\r\n}\r\n\r\n/**\r\n * Utility methods\r\n */\r\nexport class Utils {\r\n\r\n  /** convert a potential selector into actual list of html elements. optional root which defaults to document (for shadow dom) */\r\n  static getElements(els: GridStackElement, root: HTMLElement | Document = document): HTMLElement[] {\r\n    if (typeof els === 'string') {\r\n      const doc = ('getElementById' in root) ? root as Document : undefined;\r\n\r\n      // Note: very common for people use to id='1,2,3' which is only legal as HTML5 id, but not CSS selectors\r\n      // so if we start with a number, assume it's an id and just return that one item...\r\n      // see https://github.com/gridstack/gridstack.js/issues/2234#issuecomment-1523796562\r\n      if (doc && !isNaN(+els[0])) { // start with digit\r\n        const el = doc.getElementById(els);\r\n        return el ? [el] : [];\r\n      }\r\n\r\n      let list = root.querySelectorAll(els);\r\n      if (!list.length && els[0] !== '.' && els[0] !== '#') {\r\n        list = root.querySelectorAll('.' + els);\r\n        if (!list.length) { list = root.querySelectorAll('#' + els) }\r\n      }\r\n      return Array.from(list) as HTMLElement[];\r\n    }\r\n    return [els];\r\n  }\r\n\r\n  /** convert a potential selector into actual single element. optional root which defaults to document (for shadow dom) */\r\n  static getElement(els: GridStackElement, root: HTMLElement | Document = document): HTMLElement {\r\n    if (typeof els === 'string') {\r\n      const doc = ('getElementById' in root) ? root as Document : undefined;\r\n      if (!els.length) return null;\r\n      if (doc && els[0] === '#') {\r\n        return doc.getElementById(els.substring(1));\r\n      }\r\n      if (els[0] === '#' || els[0] === '.' || els[0] === '[') {\r\n        return root.querySelector(els);\r\n      }\r\n\r\n      // if we start with a digit, assume it's an id (error calling querySelector('#1')) as class are not valid CSS\r\n      if (doc && !isNaN(+els[0])) { // start with digit\r\n        return doc.getElementById(els);\r\n      }\r\n\r\n      // finally try string, then id, then class\r\n      let el = root.querySelector(els);\r\n      if (doc && !el) { el = doc.getElementById(els) }\r\n      if (!el) { el = root.querySelector('.' + els) }\r\n      return el as HTMLElement;\r\n    }\r\n    return els;\r\n  }\r\n\r\n  /** true if we should resize to content. strict=true when only 'sizeToContent:true' and not a number which lets user adjust */\r\n  static shouldSizeToContent(n: GridStackNode | undefined, strict = false): boolean {\r\n    return n?.grid && (strict ? \r\n    (n.sizeToContent === true || (n.grid.opts.sizeToContent === true && n.sizeToContent === undefined)) :\r\n    (!!n.sizeToContent || (n.grid.opts.sizeToContent && n.sizeToContent !== false)));\r\n  }\r\n\r\n  /** returns true if a and b overlap */\r\n  static isIntercepted(a: GridStackPosition, b: GridStackPosition): boolean {\r\n    return !(a.y >= b.y + b.h || a.y + a.h <= b.y || a.x + a.w <= b.x || a.x >= b.x + b.w);\r\n  }\r\n\r\n  /** returns true if a and b touch edges or corners */\r\n  static isTouching(a: GridStackPosition, b: GridStackPosition): boolean {\r\n    return Utils.isIntercepted(a, {x: b.x-0.5, y: b.y-0.5, w: b.w+1, h: b.h+1})\r\n  }\r\n\r\n  /** returns the area a and b overlap */\r\n  static areaIntercept(a: GridStackPosition, b: GridStackPosition): number {\r\n    let x0 = (a.x > b.x) ? a.x : b.x;\r\n    let x1 = (a.x+a.w < b.x+b.w) ? a.x+a.w : b.x+b.w;\r\n    if (x1 <= x0) return 0; // no overlap\r\n    let y0 = (a.y > b.y) ? a.y : b.y;\r\n    let y1 = (a.y+a.h < b.y+b.h) ? a.y+a.h : b.y+b.h;\r\n    if (y1 <= y0) return 0; // no overlap\r\n    return (x1-x0) * (y1-y0);\r\n  }\r\n\r\n  /** returns the area */\r\n  static area(a: GridStackPosition): number {\r\n    return a.w * a.h;\r\n  }\r\n\r\n  /**\r\n   * Sorts array of nodes\r\n   * @param nodes array to sort\r\n   * @param dir 1 for asc, -1 for desc (optional)\r\n   * @param width width of the grid. If undefined the width will be calculated automatically (optional).\r\n   **/\r\n  static sort(nodes: GridStackNode[], dir: 1 | -1 = 1, column?: number): GridStackNode[] {\r\n    column = column || nodes.reduce((col, n) => Math.max(n.x + n.w, col), 0) || 12;\r\n    if (dir === -1)\r\n      return nodes.sort((a, b) => ((b.x ?? 1000) + (b.y ?? 1000) * column)-((a.x ?? 1000) + (a.y ?? 1000) * column));\r\n    else\r\n      return nodes.sort((b, a) => ((b.x ?? 1000) + (b.y ?? 1000) * column)-((a.x ?? 1000) + (a.y ?? 1000) * column));\r\n  }\r\n\r\n  /** find an item by id */\r\n  static find(nodes: GridStackNode[], id: string): GridStackNode | undefined {\r\n    return id ? nodes.find(n => n.id === id) : undefined;\r\n  }\r\n\r\n  /**\r\n   * creates a style sheet with style id under given parent\r\n   * @param id will set the 'gs-style-id' attribute to that id\r\n   * @param parent to insert the stylesheet as first child,\r\n   * if none supplied it will be appended to the document head instead.\r\n   */\r\n  static createStylesheet(id: string, parent?: HTMLElement, options?: { nonce?: string }): CSSStyleSheet {\r\n    let style: HTMLStyleElement = document.createElement('style');\r\n    const nonce = options?.nonce\r\n    if (nonce) style.nonce = nonce\r\n    style.setAttribute('type', 'text/css');\r\n    style.setAttribute('gs-style-id', id);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if ((style as any).styleSheet) { // TODO: only CSSImportRule have that and different beast ??\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      (style as any).styleSheet.cssText = '';\r\n    } else {\r\n      style.appendChild(document.createTextNode('')); // WebKit hack\r\n    }\r\n    if (!parent) {\r\n      // default to head\r\n      parent = document.getElementsByTagName('head')[0];\r\n      parent.appendChild(style);\r\n    } else {\r\n      parent.insertBefore(style, parent.firstChild);\r\n    }\r\n    return style.sheet as CSSStyleSheet;\r\n  }\r\n\r\n  /** removed the given stylesheet id */\r\n  static removeStylesheet(id: string, parent?: HTMLElement): void {\r\n    const target = parent || document;\r\n    let el = target.querySelector('STYLE[gs-style-id=' + id + ']');\r\n    if (el && el.parentNode) el.remove();\r\n  }\r\n\r\n  /** inserts a CSS rule */\r\n  static addCSSRule(sheet: CSSStyleSheet, selector: string, rules: string): void {\r\n    if (typeof sheet.addRule === 'function') {\r\n      sheet.addRule(selector, rules);\r\n    } else if (typeof sheet.insertRule === 'function') {\r\n      sheet.insertRule(`${selector}{${rules}}`);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  static toBool(v: unknown): boolean {\r\n    if (typeof v === 'boolean') {\r\n      return v;\r\n    }\r\n    if (typeof v === 'string') {\r\n      v = v.toLowerCase();\r\n      return !(v === '' || v === 'no' || v === 'false' || v === '0');\r\n    }\r\n    return Boolean(v);\r\n  }\r\n\r\n  static toNumber(value: null | string): number {\r\n    return (value === null || value.length === 0) ? undefined : Number(value);\r\n  }\r\n\r\n  static parseHeight(val: numberOrString): HeightData {\r\n    let h: number;\r\n    let unit = 'px';\r\n    if (typeof val === 'string') {\r\n      if (val === 'auto' || val === '') h = 0;\r\n      else {\r\n        let match = val.match(/^(-[0-9]+\\.[0-9]+|[0-9]*\\.[0-9]+|-[0-9]+|[0-9]+)(px|em|rem|vh|vw|%|cm|mm)?$/);\r\n        if (!match) {\r\n          throw new Error(`Invalid height val = ${val}`);\r\n        }\r\n        unit = match[2] || 'px';\r\n        h = parseFloat(match[1]);\r\n      }\r\n    } else {\r\n      h = val;\r\n    }\r\n    return { h, unit };\r\n  }\r\n\r\n  /** copies unset fields in target to use the given default sources values */\r\n  // eslint-disable-next-line\r\n  static defaults(target, ...sources): {} {\r\n\r\n    sources.forEach(source => {\r\n      for (const key in source) {\r\n        if (!source.hasOwnProperty(key)) return;\r\n        if (target[key] === null || target[key] === undefined) {\r\n          target[key] = source[key];\r\n        } else if (typeof source[key] === 'object' && typeof target[key] === 'object') {\r\n          // property is an object, recursively add it's field over... #1373\r\n          this.defaults(target[key], source[key]);\r\n        }\r\n      }\r\n    });\r\n\r\n    return target;\r\n  }\r\n\r\n  /** given 2 objects return true if they have the same values. Checks for Object {} having same fields and values (just 1 level down) */\r\n  static same(a: unknown, b: unknown): boolean {\r\n    if (typeof a !== 'object')  return a == b;\r\n    if (typeof a !== typeof b) return false;\r\n    // else we have object, check just 1 level deep for being same things...\r\n    if (Object.keys(a).length !== Object.keys(b).length) return false;\r\n    for (const key in a) {\r\n      if (a[key] !== b[key]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** copies over b size & position (GridStackPosition), and optionally min/max as well */\r\n  static copyPos(a: GridStackWidget, b: GridStackWidget, doMinMax = false): GridStackWidget {\r\n    if (b.x !== undefined) a.x = b.x;\r\n    if (b.y !== undefined) a.y = b.y;\r\n    if (b.w !== undefined) a.w = b.w;\r\n    if (b.h !== undefined) a.h = b.h;\r\n    if (doMinMax) {\r\n      if (b.minW) a.minW = b.minW;\r\n      if (b.minH) a.minH = b.minH;\r\n      if (b.maxW) a.maxW = b.maxW;\r\n      if (b.maxH) a.maxH = b.maxH;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  /** true if a and b has same size & position */\r\n  static samePos(a: GridStackPosition, b: GridStackPosition): boolean {\r\n    return a && b && a.x === b.x && a.y === b.y && (a.w || 1) === (b.w || 1) && (a.h || 1) === (b.h || 1);\r\n  }\r\n\r\n  /** given a node, makes sure it's min/max are valid */\r\n  static sanitizeMinMax(node: GridStackNode) {\r\n    // remove 0, undefine, null\r\n    if (!node.minW) { delete node.minW; }\r\n    if (!node.minH) { delete node.minH; }\r\n    if (!node.maxW) { delete node.maxW; }\r\n    if (!node.maxH) { delete node.maxH; }\r\n  }\r\n\r\n  /** removes field from the first object if same as the second objects (like diffing) and internal '_' for saving */\r\n  static removeInternalAndSame(a: unknown, b: unknown):void {\r\n    if (typeof a !== 'object' || typeof b !== 'object') return;\r\n    for (let key in a) {\r\n      let val = a[key];\r\n      if (key[0] === '_' || val === b[key]) {\r\n        delete a[key]\r\n      } else if (val && typeof val === 'object' && b[key] !== undefined) {\r\n        for (let i in val) {\r\n          if (val[i] === b[key][i] || i[0] === '_') { delete val[i] }\r\n        }\r\n        if (!Object.keys(val).length) { delete a[key] }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** removes internal fields '_' and default values for saving */\r\n  static removeInternalForSave(n: GridStackNode, removeEl = true): void {\r\n    for (let key in n) { if (key[0] === '_' || n[key] === null || n[key] === undefined ) delete n[key]; }\r\n    delete n.grid;\r\n    if (removeEl) delete n.el;\r\n    // delete default values (will be re-created on read)\r\n    if (!n.autoPosition) delete n.autoPosition;\r\n    if (!n.noResize) delete n.noResize;\r\n    if (!n.noMove) delete n.noMove;\r\n    if (!n.locked) delete n.locked;\r\n    if (n.w === 1 || n.w === n.minW) delete n.w;\r\n    if (n.h === 1 || n.h === n.minH) delete n.h;\r\n  }\r\n\r\n  /** return the closest parent (or itself) matching the given class */\r\n  // static closestUpByClass(el: HTMLElement, name: string): HTMLElement {\r\n  //   while (el) {\r\n  //     if (el.classList.contains(name)) return el;\r\n  //     el = el.parentElement\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  /** delay calling the given function for given delay, preventing new calls from happening while waiting */\r\n  static throttle(func: () => void, delay: number): () => void {\r\n    let isWaiting = false;\r\n    return (...args) => {\r\n      if (!isWaiting) {\r\n        isWaiting = true;\r\n        setTimeout(() => { func(...args); isWaiting = false; }, delay);\r\n      }\r\n    }\r\n  }\r\n\r\n  static removePositioningStyles(el: HTMLElement): void {\r\n    let style = el.style;\r\n    if (style.position) {\r\n      style.removeProperty('position');\r\n    }\r\n    if (style.left) {\r\n      style.removeProperty('left');\r\n    }\r\n    if (style.top) {\r\n      style.removeProperty('top');\r\n    }\r\n    if (style.width) {\r\n      style.removeProperty('width');\r\n    }\r\n    if (style.height) {\r\n      style.removeProperty('height');\r\n    }\r\n  }\r\n\r\n  /** @internal returns the passed element if scrollable, else the closest parent that will, up to the entire document scrolling element */\r\n  static getScrollElement(el?: HTMLElement): HTMLElement {\r\n    if (!el) return document.scrollingElement as HTMLElement || document.documentElement; // IE support\r\n    const style = getComputedStyle(el);\r\n    const overflowRegex = /(auto|scroll)/;\r\n\r\n    if (overflowRegex.test(style.overflow + style.overflowY)) {\r\n      return el;\r\n    } else {\r\n      return this.getScrollElement(el.parentElement);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  static updateScrollPosition(el: HTMLElement, position: {top: number}, distance: number): void {\r\n    // is widget in view?\r\n    let rect = el.getBoundingClientRect();\r\n    let innerHeightOrClientHeight = (window.innerHeight || document.documentElement.clientHeight);\r\n    if (rect.top < 0 ||\r\n      rect.bottom > innerHeightOrClientHeight\r\n    ) {\r\n      // set scrollTop of first parent that scrolls\r\n      // if parent is larger than el, set as low as possible\r\n      // to get entire widget on screen\r\n      let offsetDiffDown = rect.bottom - innerHeightOrClientHeight;\r\n      let offsetDiffUp = rect.top;\r\n      let scrollEl = this.getScrollElement(el);\r\n      if (scrollEl !== null) {\r\n        let prevScroll = scrollEl.scrollTop;\r\n        if (rect.top < 0 && distance < 0) {\r\n          // moving up\r\n          if (el.offsetHeight > innerHeightOrClientHeight) {\r\n            scrollEl.scrollTop += distance;\r\n          } else {\r\n            scrollEl.scrollTop += Math.abs(offsetDiffUp) > Math.abs(distance) ? distance : offsetDiffUp;\r\n          }\r\n        } else if (distance > 0) {\r\n          // moving down\r\n          if (el.offsetHeight > innerHeightOrClientHeight) {\r\n            scrollEl.scrollTop += distance;\r\n          } else {\r\n            scrollEl.scrollTop += offsetDiffDown > distance ? distance : offsetDiffDown;\r\n          }\r\n        }\r\n        // move widget y by amount scrolled\r\n        position.top += scrollEl.scrollTop - prevScroll;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal Function used to scroll the page.\r\n   *\r\n   * @param event `MouseEvent` that triggers the resize\r\n   * @param el `HTMLElement` that's being resized\r\n   * @param distance Distance from the V edges to start scrolling\r\n   */\r\n  static updateScrollResize(event: MouseEvent, el: HTMLElement, distance: number): void {\r\n    const scrollEl = this.getScrollElement(el);\r\n    const height = scrollEl.clientHeight;\r\n    // #1727 event.clientY is relative to viewport, so must compare this against position of scrollEl getBoundingClientRect().top\r\n    // #1745 Special situation if scrollEl is document 'html': here browser spec states that\r\n    // clientHeight is height of viewport, but getBoundingClientRect() is rectangle of html element;\r\n    // this discrepancy arises because in reality scrollbar is attached to viewport, not html element itself.\r\n    const offsetTop = (scrollEl === this.getScrollElement()) ? 0 : scrollEl.getBoundingClientRect().top;\r\n    const pointerPosY = event.clientY - offsetTop;\r\n    const top = pointerPosY < distance;\r\n    const bottom = pointerPosY > height - distance;\r\n\r\n    if (top) {\r\n      // This also can be done with a timeout to keep scrolling while the mouse is\r\n      // in the scrolling zone. (will have smoother behavior)\r\n      scrollEl.scrollBy({ behavior: 'smooth', top: pointerPosY - distance});\r\n    } else if (bottom) {\r\n      scrollEl.scrollBy({ behavior: 'smooth', top: distance - (height - pointerPosY)});\r\n    }\r\n  }\r\n\r\n  /** single level clone, returning a new object with same top fields. This will share sub objects and arrays */\r\n  static clone<T>(obj: T): T {\r\n    if (obj === null || obj === undefined || typeof(obj) !== 'object') {\r\n      return obj;\r\n    }\r\n    // return Object.assign({}, obj);\r\n    if (obj instanceof Array) {\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      return [...obj] as any;\r\n    }\r\n    return {...obj};\r\n  }\r\n\r\n  /**\r\n   * Recursive clone version that returns a full copy, checking for nested objects and arrays ONLY.\r\n   * Note: this will use as-is any key starting with double __ (and not copy inside) some lib have circular dependencies.\r\n   */\r\n  static cloneDeep<T>(obj: T): T {\r\n    // list of fields we will skip during cloneDeep (nested objects, other internal)\r\n    const skipFields = ['parentGrid', 'el', 'grid', 'subGrid', 'engine'];\r\n    // return JSON.parse(JSON.stringify(obj)); // doesn't work with date format ?\r\n    const ret = Utils.clone(obj);\r\n    for (const key in ret) {\r\n      // NOTE: we don't support function/circular dependencies so skip those properties for now...\r\n      if (ret.hasOwnProperty(key) && typeof(ret[key]) === 'object' && key.substring(0, 2) !== '__' && !skipFields.find(k => k === key)) {\r\n        ret[key] = Utils.cloneDeep(obj[key]);\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /** deep clone the given HTML node, removing teh unique id field */\r\n  public static cloneNode(el: HTMLElement): HTMLElement {\r\n    const node = el.cloneNode(true) as HTMLElement;\r\n    node.removeAttribute('id');\r\n    return node;\r\n  }\r\n\r\n  public static appendTo(el: HTMLElement, parent: string | HTMLElement): void {\r\n    let parentNode: HTMLElement;\r\n    if (typeof parent === 'string') {\r\n      parentNode = Utils.getElement(parent);\r\n    } else {\r\n      parentNode = parent;\r\n    }\r\n    if (parentNode) {\r\n      parentNode.appendChild(el);\r\n    }\r\n  }\r\n\r\n  // public static setPositionRelative(el: HTMLElement): void {\r\n  //   if (!(/^(?:r|a|f)/).test(getComputedStyle(el).position)) {\r\n  //     el.style.position = \"relative\";\r\n  //   }\r\n  // }\r\n\r\n  public static addElStyles(el: HTMLElement, styles: { [prop: string]: string | string[] }): void {\r\n    if (styles instanceof Object) {\r\n      for (const s in styles) {\r\n        if (styles.hasOwnProperty(s)) {\r\n          if (Array.isArray(styles[s])) {\r\n            // support fallback value\r\n            (styles[s] as string[]).forEach(val => {\r\n              el.style[s] = val;\r\n            });\r\n          } else {\r\n            el.style[s] = styles[s];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public static initEvent<T>(e: DragEvent | MouseEvent, info: { type: string; target?: EventTarget }): T {\r\n    const evt = { type: info.type };\r\n    const obj = {\r\n      button: 0,\r\n      which: 0,\r\n      buttons: 1,\r\n      bubbles: true,\r\n      cancelable: true,\r\n      target: info.target ? info.target : e.target\r\n    };\r\n    // don't check for `instanceof DragEvent` as Safari use MouseEvent #1540\r\n    if ((e as DragEvent).dataTransfer) {\r\n      evt['dataTransfer'] = (e as DragEvent).dataTransfer; // workaround 'readonly' field.\r\n    }\r\n    ['altKey','ctrlKey','metaKey','shiftKey'].forEach(p => evt[p] = e[p]); // keys\r\n    ['pageX','pageY','clientX','clientY','screenX','screenY'].forEach(p => evt[p] = e[p]); // point info\r\n    return {...evt, ...obj} as unknown as T;\r\n  }\r\n\r\n  /** copies the MouseEvent properties and sends it as another event to the given target */\r\n  public static simulateMouseEvent(e: MouseEvent, simulatedType: string, target?: EventTarget): void {\r\n    const simulatedEvent = document.createEvent('MouseEvents');\r\n    simulatedEvent.initMouseEvent(\r\n      simulatedType, // type\r\n      true,         // bubbles\r\n      true,         // cancelable\r\n      window,       // view\r\n      1,            // detail\r\n      e.screenX,    // screenX\r\n      e.screenY,    // screenY\r\n      e.clientX,    // clientX\r\n      e.clientY,    // clientY\r\n      e.ctrlKey,    // ctrlKey\r\n      e.altKey,     // altKey\r\n      e.shiftKey,   // shiftKey\r\n      e.metaKey,    // metaKey\r\n      0,            // button\r\n      e.target      // relatedTarget\r\n    );\r\n    (target || e.target).dispatchEvent(simulatedEvent);\r\n  }\r\n\r\n  /**\r\n   * defines an element that is used to get the offset and scale from grid transforms\r\n   * returns the scale and offsets from said element\r\n  */\r\n  public static getValuesFromTransformedElement(parent: HTMLElement): DragTransform {\r\n    const transformReference = document.createElement('div');\r\n    Utils.addElStyles(transformReference, {\r\n      opacity: '0',\r\n      position: 'fixed',\r\n      top: 0 + 'px',\r\n      left: 0 + 'px',\r\n      width: '1px',\r\n      height: '1px',\r\n      zIndex: '-999999',\r\n    });\r\n    parent.appendChild(transformReference);\r\n    const transformValues = transformReference.getBoundingClientRect();\r\n    parent.removeChild(transformReference);\r\n    transformReference.remove();\r\n    return {\r\n      xScale: 1 / transformValues.width,\r\n      yScale: 1 / transformValues.height,\r\n      xOffset: transformValues.left,\r\n      yOffset: transformValues.top,\r\n    }\r\n  }\r\n\r\n  /** returns true if event is inside the given element rectangle */\r\n  // Note: Safari Mac has null event.relatedTarget which causes #1684 so check if DragEvent is inside the coordinates instead\r\n  //    this.el.contains(event.relatedTarget as HTMLElement)\r\n  // public static inside(e: MouseEvent, el: HTMLElement): boolean {\r\n  //   // srcElement, toElement, target: all set to placeholder when leaving simple grid, so we can't use that (Chrome)\r\n  //   let target: HTMLElement = e.relatedTarget || (e as any).fromElement;\r\n  //   if (!target) {\r\n  //     const { bottom, left, right, top } = el.getBoundingClientRect();\r\n  //     return (e.x < right && e.x > left && e.y < bottom && e.y > top);\r\n  //   }\r\n  //   return el.contains(target);\r\n  // }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}