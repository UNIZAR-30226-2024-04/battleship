{"ast":null,"code":"/**\n * dd-resizable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\nimport { DDResizableHandle } from './dd-resizable-handle';\nimport { DDBaseImplement } from './dd-base-impl';\nimport { Utils } from './utils';\nimport { DDManager } from './dd-manager';\nclass DDResizable extends DDBaseImplement {\n  // have to be public else complains for HTMLElementExtendOpt ?\n  constructor(el, option = {}) {\n    super();\n    this.el = el;\n    this.option = option;\n    /** @internal */\n    this.rectScale = {\n      x: 1,\n      y: 1\n    };\n    /** @internal */\n    this._ui = () => {\n      const containmentEl = this.el.parentElement;\n      const containmentRect = containmentEl.getBoundingClientRect();\n      const newRect = {\n        width: this.originalRect.width,\n        height: this.originalRect.height + this.scrolled,\n        left: this.originalRect.left,\n        top: this.originalRect.top - this.scrolled\n      };\n      const rect = this.temporalRect || newRect;\n      return {\n        position: {\n          left: (rect.left - containmentRect.left) * this.rectScale.x,\n          top: (rect.top - containmentRect.top) * this.rectScale.y\n        },\n        size: {\n          width: rect.width * this.rectScale.x,\n          height: rect.height * this.rectScale.y\n        }\n        /* Gridstack ONLY needs position set above... keep around in case.\n        element: [this.el], // The object representing the element to be resized\n        helper: [], // TODO: not support yet - The object representing the helper that's being resized\n        originalElement: [this.el],// we don't wrap here, so simplify as this.el //The object representing the original element before it is wrapped\n        originalPosition: { // The position represented as { left, top } before the resizable is resized\n          left: this.originalRect.left - containmentRect.left,\n          top: this.originalRect.top - containmentRect.top\n        },\n        originalSize: { // The size represented as { width, height } before the resizable is resized\n          width: this.originalRect.width,\n          height: this.originalRect.height\n        }\n        */\n      };\n    };\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseOver = this._mouseOver.bind(this);\n    this._mouseOut = this._mouseOut.bind(this);\n    this.enable();\n    this._setupAutoHide(this.option.autoHide);\n    this._setupHandlers();\n  }\n  on(event, callback) {\n    super.on(event, callback);\n  }\n  off(event) {\n    super.off(event);\n  }\n  enable() {\n    super.enable();\n    this.el.classList.remove('ui-resizable-disabled');\n    this._setupAutoHide(this.option.autoHide);\n  }\n  disable() {\n    super.disable();\n    this.el.classList.add('ui-resizable-disabled');\n    this._setupAutoHide(false);\n  }\n  destroy() {\n    this._removeHandlers();\n    this._setupAutoHide(false);\n    delete this.el;\n    super.destroy();\n  }\n  updateOption(opts) {\n    let updateHandles = opts.handles && opts.handles !== this.option.handles;\n    let updateAutoHide = opts.autoHide && opts.autoHide !== this.option.autoHide;\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    if (updateHandles) {\n      this._removeHandlers();\n      this._setupHandlers();\n    }\n    if (updateAutoHide) {\n      this._setupAutoHide(this.option.autoHide);\n    }\n    return this;\n  }\n  /** @internal turns auto hide on/off */\n  _setupAutoHide(auto) {\n    if (auto) {\n      this.el.classList.add('ui-resizable-autohide');\n      // use mouseover and not mouseenter to get better performance and track for nested cases\n      this.el.addEventListener('mouseover', this._mouseOver);\n      this.el.addEventListener('mouseout', this._mouseOut);\n    } else {\n      this.el.classList.remove('ui-resizable-autohide');\n      this.el.removeEventListener('mouseover', this._mouseOver);\n      this.el.removeEventListener('mouseout', this._mouseOut);\n      if (DDManager.overResizeElement === this) {\n        delete DDManager.overResizeElement;\n      }\n    }\n    return this;\n  }\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _mouseOver(e) {\n    // console.log(`${count++} pre-enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    // already over a child, ignore. Ideally we just call e.stopPropagation() but see https://github.com/gridstack/gridstack.js/issues/2018\n    if (DDManager.overResizeElement || DDManager.dragElement) return;\n    DDManager.overResizeElement = this;\n    // console.log(`${count++} enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    this.el.classList.remove('ui-resizable-autohide');\n  }\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _mouseOut(e) {\n    // console.log(`${count++} pre-leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    if (DDManager.overResizeElement !== this) return;\n    delete DDManager.overResizeElement;\n    // console.log(`${count++} leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    this.el.classList.add('ui-resizable-autohide');\n  }\n  /** @internal */\n  _setupHandlers() {\n    this.handlers = this.option.handles.split(',').map(dir => dir.trim()).map(dir => new DDResizableHandle(this.el, dir, {\n      start: event => {\n        this._resizeStart(event);\n      },\n      stop: event => {\n        this._resizeStop(event);\n      },\n      move: event => {\n        this._resizing(event, dir);\n      }\n    }));\n    return this;\n  }\n  /** @internal */\n  _resizeStart(event) {\n    this.sizeToContent = Utils.shouldSizeToContent(this.el.gridstackNode, true); // strick true only and not number\n    this.originalRect = this.el.getBoundingClientRect();\n    this.scrollEl = Utils.getScrollElement(this.el);\n    this.scrollY = this.scrollEl.scrollTop;\n    this.scrolled = 0;\n    this.startEvent = event;\n    this._setupHelper();\n    this._applyChange();\n    const ev = Utils.initEvent(event, {\n      type: 'resizestart',\n      target: this.el\n    });\n    if (this.option.start) {\n      this.option.start(ev, this._ui());\n    }\n    this.el.classList.add('ui-resizable-resizing');\n    this.triggerEvent('resizestart', ev);\n    return this;\n  }\n  /** @internal */\n  _resizing(event, dir) {\n    this.scrolled = this.scrollEl.scrollTop - this.scrollY;\n    this.temporalRect = this._getChange(event, dir);\n    this._applyChange();\n    const ev = Utils.initEvent(event, {\n      type: 'resize',\n      target: this.el\n    });\n    if (this.option.resize) {\n      this.option.resize(ev, this._ui());\n    }\n    this.triggerEvent('resize', ev);\n    return this;\n  }\n  /** @internal */\n  _resizeStop(event) {\n    const ev = Utils.initEvent(event, {\n      type: 'resizestop',\n      target: this.el\n    });\n    if (this.option.stop) {\n      this.option.stop(ev); // Note: ui() not used by gridstack so don't pass\n    }\n    this.el.classList.remove('ui-resizable-resizing');\n    this.triggerEvent('resizestop', ev);\n    this._cleanHelper();\n    delete this.startEvent;\n    delete this.originalRect;\n    delete this.temporalRect;\n    delete this.scrollY;\n    delete this.scrolled;\n    return this;\n  }\n  /** @internal */\n  _setupHelper() {\n    this.elOriginStyleVal = DDResizable._originStyleProp.map(prop => this.el.style[prop]);\n    this.parentOriginStylePosition = this.el.parentElement.style.position;\n    const parent = this.el.parentElement;\n    const dragTransform = Utils.getValuesFromTransformedElement(parent);\n    this.rectScale = {\n      x: dragTransform.xScale,\n      y: dragTransform.yScale\n    };\n    if (getComputedStyle(this.el.parentElement).position.match(/static/)) {\n      this.el.parentElement.style.position = 'relative';\n    }\n    this.el.style.position = 'absolute';\n    this.el.style.opacity = '0.8';\n    return this;\n  }\n  /** @internal */\n  _cleanHelper() {\n    DDResizable._originStyleProp.forEach((prop, i) => {\n      this.el.style[prop] = this.elOriginStyleVal[i] || null;\n    });\n    this.el.parentElement.style.position = this.parentOriginStylePosition || null;\n    return this;\n  }\n  /** @internal */\n  _getChange(event, dir) {\n    const oEvent = this.startEvent;\n    const newRect = {\n      width: this.originalRect.width,\n      height: this.originalRect.height + this.scrolled,\n      left: this.originalRect.left,\n      top: this.originalRect.top - this.scrolled\n    };\n    const offsetX = event.clientX - oEvent.clientX;\n    const offsetY = this.sizeToContent ? 0 : event.clientY - oEvent.clientY; // prevent vert resize\n    if (dir.indexOf('e') > -1) {\n      newRect.width += offsetX;\n    } else if (dir.indexOf('w') > -1) {\n      newRect.width -= offsetX;\n      newRect.left += offsetX;\n    }\n    if (dir.indexOf('s') > -1) {\n      newRect.height += offsetY;\n    } else if (dir.indexOf('n') > -1) {\n      newRect.height -= offsetY;\n      newRect.top += offsetY;\n    }\n    const constrain = this._constrainSize(newRect.width, newRect.height);\n    if (Math.round(newRect.width) !== Math.round(constrain.width)) {\n      // round to ignore slight round-off errors\n      if (dir.indexOf('w') > -1) {\n        newRect.left += newRect.width - constrain.width;\n      }\n      newRect.width = constrain.width;\n    }\n    if (Math.round(newRect.height) !== Math.round(constrain.height)) {\n      if (dir.indexOf('n') > -1) {\n        newRect.top += newRect.height - constrain.height;\n      }\n      newRect.height = constrain.height;\n    }\n    return newRect;\n  }\n  /** @internal constrain the size to the set min/max values */\n  _constrainSize(oWidth, oHeight) {\n    const maxWidth = this.option.maxWidth || Number.MAX_SAFE_INTEGER;\n    const minWidth = this.option.minWidth / this.rectScale.x || oWidth;\n    const maxHeight = this.option.maxHeight || Number.MAX_SAFE_INTEGER;\n    const minHeight = this.option.minHeight / this.rectScale.y || oHeight;\n    const width = Math.min(maxWidth, Math.max(minWidth, oWidth));\n    const height = Math.min(maxHeight, Math.max(minHeight, oHeight));\n    return {\n      width,\n      height\n    };\n  }\n  /** @internal */\n  _applyChange() {\n    let containmentRect = {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n    if (this.el.style.position === 'absolute') {\n      const containmentEl = this.el.parentElement;\n      const {\n        left,\n        top\n      } = containmentEl.getBoundingClientRect();\n      containmentRect = {\n        left,\n        top,\n        width: 0,\n        height: 0\n      };\n    }\n    if (!this.temporalRect) return this;\n    Object.keys(this.temporalRect).forEach(key => {\n      const value = this.temporalRect[key];\n      const scaleReciprocal = key === 'width' || key === 'left' ? this.rectScale.x : key === 'height' || key === 'top' ? this.rectScale.y : 1;\n      this.el.style[key] = (value - containmentRect[key]) * scaleReciprocal + 'px';\n    });\n    return this;\n  }\n  /** @internal */\n  _removeHandlers() {\n    this.handlers.forEach(handle => handle.destroy());\n    delete this.handlers;\n    return this;\n  }\n}\n/** @internal */\nDDResizable._originStyleProp = ['width', 'height', 'position', 'left', 'top', 'opacity', 'zIndex'];\nexport { DDResizable };","map":{"version":3,"names":["DDResizableHandle","DDBaseImplement","Utils","DDManager","DDResizable","constructor","el","option","rectScale","x","y","_ui","containmentEl","parentElement","containmentRect","getBoundingClientRect","newRect","width","originalRect","height","scrolled","left","top","rect","temporalRect","position","size","_mouseOver","bind","_mouseOut","enable","_setupAutoHide","autoHide","_setupHandlers","on","event","callback","off","classList","remove","disable","add","destroy","_removeHandlers","updateOption","opts","updateHandles","handles","updateAutoHide","Object","keys","forEach","key","auto","addEventListener","removeEventListener","overResizeElement","e","dragElement","handlers","split","map","dir","trim","start","_resizeStart","stop","_resizeStop","move","_resizing","sizeToContent","shouldSizeToContent","gridstackNode","scrollEl","getScrollElement","scrollY","scrollTop","startEvent","_setupHelper","_applyChange","ev","initEvent","type","target","triggerEvent","_getChange","resize","_cleanHelper","elOriginStyleVal","_originStyleProp","prop","style","parentOriginStylePosition","parent","dragTransform","getValuesFromTransformedElement","xScale","yScale","getComputedStyle","match","opacity","i","oEvent","offsetX","clientX","offsetY","clientY","indexOf","constrain","_constrainSize","Math","round","oWidth","oHeight","maxWidth","Number","MAX_SAFE_INTEGER","minWidth","maxHeight","minHeight","min","max","value","scaleReciprocal","handle"],"sources":["/Users/luis01/Desktop/MATINF/Asignaturas/Proyecto_Software/battleship/app_web/frontend/node_modules/gridstack/src/dd-resizable.ts"],"sourcesContent":["/**\n * dd-resizable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\n\nimport { DDResizableHandle } from './dd-resizable-handle';\nimport { DDBaseImplement, HTMLElementExtendOpt } from './dd-base-impl';\nimport { Utils } from './utils';\nimport { DDUIData, GridItemHTMLElement, Rect, Size } from './types';\nimport { DDManager } from './dd-manager';\n\n// import { GridItemHTMLElement } from './types'; let count = 0; // TEST\n\n// TODO: merge with DDDragOpt\nexport interface DDResizableOpt {\n  autoHide?: boolean;\n  handles?: string;\n  maxHeight?: number;\n  maxWidth?: number;\n  minHeight?: number;\n  minWidth?: number;\n  start?: (event: Event, ui: DDUIData) => void;\n  stop?: (event: Event) => void;\n  resize?: (event: Event, ui: DDUIData) => void;\n}\n\ninterface RectScaleReciprocal {\n  x: number;\n  y: number;\n}\n\nexport class DDResizable extends DDBaseImplement implements HTMLElementExtendOpt<DDResizableOpt> {\n  /** @internal */\n  protected handlers: DDResizableHandle[];\n  /** @internal */\n  protected originalRect: Rect;\n  /** @internal */\n  protected rectScale: RectScaleReciprocal = { x: 1, y: 1 };\n  /** @internal */\n  protected temporalRect: Rect;\n  /** @internal */\n  protected scrollY: number;\n  /** @internal */\n  protected scrolled: number;\n  /** @internal */\n  protected scrollEl: HTMLElement;\n  /** @internal */\n  protected startEvent: MouseEvent;\n  /** @internal value saved in the same order as _originStyleProp[] */\n  protected elOriginStyleVal: string[];\n  /** @internal */\n  protected parentOriginStylePosition: string;\n  /** @internal */\n  protected static _originStyleProp = ['width', 'height', 'position', 'left', 'top', 'opacity', 'zIndex'];\n  /** @internal */\n  protected sizeToContent: boolean;\n\n  // have to be public else complains for HTMLElementExtendOpt ?\n  constructor(public el: GridItemHTMLElement, public option: DDResizableOpt = {}) {\n    super();\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseOver = this._mouseOver.bind(this);\n    this._mouseOut = this._mouseOut.bind(this);\n    this.enable();\n    this._setupAutoHide(this.option.autoHide);\n    this._setupHandlers();\n  }\n\n  public on(event: 'resizestart' | 'resize' | 'resizestop', callback: (event: DragEvent) => void): void {\n    super.on(event, callback);\n  }\n\n  public off(event: 'resizestart' | 'resize' | 'resizestop'): void {\n    super.off(event);\n  }\n\n  public enable(): void {\n    super.enable();\n    this.el.classList.remove('ui-resizable-disabled');\n    this._setupAutoHide(this.option.autoHide);\n  }\n\n  public disable(): void {\n    super.disable();\n    this.el.classList.add('ui-resizable-disabled');\n    this._setupAutoHide(false);\n  }\n\n  public destroy(): void {\n    this._removeHandlers();\n    this._setupAutoHide(false);\n    delete this.el;\n    super.destroy();\n  }\n\n  public updateOption(opts: DDResizableOpt): DDResizable {\n    let updateHandles = (opts.handles && opts.handles !== this.option.handles);\n    let updateAutoHide = (opts.autoHide && opts.autoHide !== this.option.autoHide);\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    if (updateHandles) {\n      this._removeHandlers();\n      this._setupHandlers();\n    }\n    if (updateAutoHide) {\n      this._setupAutoHide(this.option.autoHide);\n    }\n    return this;\n  }\n\n  /** @internal turns auto hide on/off */\n  protected _setupAutoHide(auto: boolean): DDResizable {\n    if (auto) {\n      this.el.classList.add('ui-resizable-autohide');\n      // use mouseover and not mouseenter to get better performance and track for nested cases\n      this.el.addEventListener('mouseover', this._mouseOver);\n      this.el.addEventListener('mouseout', this._mouseOut);\n    } else {\n      this.el.classList.remove('ui-resizable-autohide');\n      this.el.removeEventListener('mouseover', this._mouseOver);\n      this.el.removeEventListener('mouseout', this._mouseOut);\n      if (DDManager.overResizeElement === this) {\n        delete DDManager.overResizeElement;\n      }\n    }\n    return this;\n  }\n\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _mouseOver(e: Event): void {\n    // console.log(`${count++} pre-enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    // already over a child, ignore. Ideally we just call e.stopPropagation() but see https://github.com/gridstack/gridstack.js/issues/2018\n    if (DDManager.overResizeElement || DDManager.dragElement) return;\n    DDManager.overResizeElement = this;\n    // console.log(`${count++} enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    this.el.classList.remove('ui-resizable-autohide');\n  }\n\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _mouseOut(e: Event): void {\n    // console.log(`${count++} pre-leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    if (DDManager.overResizeElement !== this) return;\n    delete DDManager.overResizeElement;\n    // console.log(`${count++} leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)\n    this.el.classList.add('ui-resizable-autohide');\n  }\n\n  /** @internal */\n  protected _setupHandlers(): DDResizable {\n    this.handlers = this.option.handles.split(',')\n      .map(dir => dir.trim())\n      .map(dir => new DDResizableHandle(this.el, dir, {\n        start: (event: MouseEvent) => {\n          this._resizeStart(event);\n        },\n        stop: (event: MouseEvent) => {\n          this._resizeStop(event);\n        },\n        move: (event: MouseEvent) => {\n          this._resizing(event, dir);\n        }\n      }));\n    return this;\n  }\n\n  /** @internal */\n  protected _resizeStart(event: MouseEvent): DDResizable {\n    this.sizeToContent = Utils.shouldSizeToContent(this.el.gridstackNode, true); // strick true only and not number\n    this.originalRect = this.el.getBoundingClientRect();\n    this.scrollEl = Utils.getScrollElement(this.el);\n    this.scrollY = this.scrollEl.scrollTop;\n    this.scrolled = 0;\n    this.startEvent = event;\n    this._setupHelper();\n    this._applyChange();\n    const ev = Utils.initEvent<MouseEvent>(event, { type: 'resizestart', target: this.el });\n    if (this.option.start) {\n      this.option.start(ev, this._ui());\n    }\n    this.el.classList.add('ui-resizable-resizing');\n    this.triggerEvent('resizestart', ev);\n    return this;\n  }\n\n  /** @internal */\n  protected _resizing(event: MouseEvent, dir: string): DDResizable {\n    this.scrolled = this.scrollEl.scrollTop - this.scrollY;\n    this.temporalRect = this._getChange(event, dir);\n    this._applyChange();\n    const ev = Utils.initEvent<MouseEvent>(event, { type: 'resize', target: this.el });\n    if (this.option.resize) {\n      this.option.resize(ev, this._ui());\n    }\n    this.triggerEvent('resize', ev);\n    return this;\n  }\n\n  /** @internal */\n  protected _resizeStop(event: MouseEvent): DDResizable {\n    const ev = Utils.initEvent<MouseEvent>(event, { type: 'resizestop', target: this.el });\n    if (this.option.stop) {\n      this.option.stop(ev); // Note: ui() not used by gridstack so don't pass\n    }\n    this.el.classList.remove('ui-resizable-resizing');\n    this.triggerEvent('resizestop', ev);\n    this._cleanHelper();\n    delete this.startEvent;\n    delete this.originalRect;\n    delete this.temporalRect;\n    delete this.scrollY;\n    delete this.scrolled;\n    return this;\n  }\n\n  /** @internal */\n  protected _setupHelper(): DDResizable {\n    this.elOriginStyleVal = DDResizable._originStyleProp.map(prop => this.el.style[prop]);\n    this.parentOriginStylePosition = this.el.parentElement.style.position;\n\n    const parent = this.el.parentElement;\n    const dragTransform = Utils.getValuesFromTransformedElement(parent);\n    this.rectScale = {\n      x: dragTransform.xScale,\n      y: dragTransform.yScale\n    };\n\n    if (getComputedStyle(this.el.parentElement).position.match(/static/)) {\n      this.el.parentElement.style.position = 'relative';\n    }\n    this.el.style.position = 'absolute';\n    this.el.style.opacity = '0.8';\n    return this;\n  }\n\n  /** @internal */\n  protected _cleanHelper(): DDResizable {\n    DDResizable._originStyleProp.forEach((prop, i) => {\n      this.el.style[prop] = this.elOriginStyleVal[i] || null;\n    });\n    this.el.parentElement.style.position = this.parentOriginStylePosition || null;\n    return this;\n  }\n\n  /** @internal */\n  protected _getChange(event: MouseEvent, dir: string): Rect {\n    const oEvent = this.startEvent;\n    const newRect = { // Note: originalRect is a complex object, not a simple Rect, so copy out.\n      width: this.originalRect.width,\n      height: this.originalRect.height + this.scrolled,\n      left: this.originalRect.left,\n      top: this.originalRect.top - this.scrolled\n    };\n\n    const offsetX = event.clientX - oEvent.clientX;\n    const offsetY = this.sizeToContent ? 0 : event.clientY - oEvent.clientY; // prevent vert resize\n\n    if (dir.indexOf('e') > -1) {\n      newRect.width += offsetX;\n    } else if (dir.indexOf('w') > -1) {\n      newRect.width -= offsetX;\n      newRect.left += offsetX;\n    }\n    if (dir.indexOf('s') > -1) {\n      newRect.height += offsetY;\n    } else if (dir.indexOf('n') > -1) {\n      newRect.height -= offsetY;\n      newRect.top += offsetY\n    }\n    const constrain = this._constrainSize(newRect.width, newRect.height);\n    if (Math.round(newRect.width) !== Math.round(constrain.width)) { // round to ignore slight round-off errors\n      if (dir.indexOf('w') > -1) {\n        newRect.left += newRect.width - constrain.width;\n      }\n      newRect.width = constrain.width;\n    }\n    if (Math.round(newRect.height) !== Math.round(constrain.height)) {\n      if (dir.indexOf('n') > -1) {\n        newRect.top += newRect.height - constrain.height;\n      }\n      newRect.height = constrain.height;\n    }\n    return newRect;\n  }\n\n  /** @internal constrain the size to the set min/max values */\n  protected _constrainSize(oWidth: number, oHeight: number): Size {\n    const maxWidth = this.option.maxWidth || Number.MAX_SAFE_INTEGER;\n    const minWidth = this.option.minWidth / this.rectScale.x || oWidth;\n    const maxHeight = this.option.maxHeight || Number.MAX_SAFE_INTEGER;\n    const minHeight = this.option.minHeight / this.rectScale.y || oHeight;\n    const width = Math.min(maxWidth, Math.max(minWidth, oWidth));\n    const height = Math.min(maxHeight, Math.max(minHeight, oHeight));\n    return { width, height };\n  }\n\n  /** @internal */\n  protected _applyChange(): DDResizable {\n    let containmentRect = { left: 0, top: 0, width: 0, height: 0 };\n    if (this.el.style.position === 'absolute') {\n      const containmentEl = this.el.parentElement;\n      const { left, top } = containmentEl.getBoundingClientRect();\n      containmentRect = { left, top, width: 0, height: 0 };\n    }\n    if (!this.temporalRect) return this;\n    Object.keys(this.temporalRect).forEach(key => {\n      const value = this.temporalRect[key];\n      const scaleReciprocal = key === 'width' || key === 'left' ? this.rectScale.x : key === 'height' || key === 'top' ? this.rectScale.y : 1;\n      this.el.style[key] = (value - containmentRect[key]) * scaleReciprocal + 'px';\n    });\n    return this;\n  }\n\n  /** @internal */\n  protected _removeHandlers(): DDResizable {\n    this.handlers.forEach(handle => handle.destroy());\n    delete this.handlers;\n    return this;\n  }\n\n  /** @internal */\n  protected _ui = (): DDUIData => {\n    const containmentEl = this.el.parentElement;\n    const containmentRect = containmentEl.getBoundingClientRect();\n    const newRect = { // Note: originalRect is a complex object, not a simple Rect, so copy out.\n      width: this.originalRect.width,\n      height: this.originalRect.height + this.scrolled,\n      left: this.originalRect.left,\n      top: this.originalRect.top - this.scrolled\n    };\n    const rect = this.temporalRect || newRect;\n    return {\n      position: {\n        left: (rect.left - containmentRect.left) * this.rectScale.x,\n        top: (rect.top - containmentRect.top) * this.rectScale.y\n      },\n      size: {\n        width: rect.width * this.rectScale.x,\n        height: rect.height * this.rectScale.y\n      }\n      /* Gridstack ONLY needs position set above... keep around in case.\n      element: [this.el], // The object representing the element to be resized\n      helper: [], // TODO: not support yet - The object representing the helper that's being resized\n      originalElement: [this.el],// we don't wrap here, so simplify as this.el //The object representing the original element before it is wrapped\n      originalPosition: { // The position represented as { left, top } before the resizable is resized\n        left: this.originalRect.left - containmentRect.left,\n        top: this.originalRect.top - containmentRect.top\n      },\n      originalSize: { // The size represented as { width, height } before the resizable is resized\n        width: this.originalRect.width,\n        height: this.originalRect.height\n      }\n      */\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}