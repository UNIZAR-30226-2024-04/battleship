{"ast":null,"code":"/**\n * dd-draggable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\nimport { DDManager } from './dd-manager';\nimport { Utils } from './utils';\nimport { DDBaseImplement } from './dd-base-impl';\nimport { isTouch, touchend, touchmove, touchstart, pointerdown } from './dd-touch';\n// make sure we are not clicking on known object that handles mouseDown\nconst skipMouseDown = 'input,textarea,button,select,option,[contenteditable=\"true\"],.ui-resizable-handle';\n// let count = 0; // TEST\nclass DDDraggable extends DDBaseImplement {\n  constructor(el, option = {}) {\n    super();\n    this.el = el;\n    this.option = option;\n    /** @internal */\n    this.dragTransform = {\n      xScale: 1,\n      yScale: 1,\n      xOffset: 0,\n      yOffset: 0\n    };\n    // get the element that is actually supposed to be dragged by\n    let handleName = option.handle.substring(1);\n    this.dragEl = el.classList.contains(handleName) ? el : el.querySelector(option.handle) || el;\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseDown = this._mouseDown.bind(this);\n    this._mouseMove = this._mouseMove.bind(this);\n    this._mouseUp = this._mouseUp.bind(this);\n    this.enable();\n  }\n  on(event, callback) {\n    super.on(event, callback);\n  }\n  off(event) {\n    super.off(event);\n  }\n  enable() {\n    if (this.disabled === false) return;\n    super.enable();\n    this.dragEl.addEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.dragEl.addEventListener('touchstart', touchstart);\n      this.dragEl.addEventListener('pointerdown', pointerdown);\n      // this.dragEl.style.touchAction = 'none'; // not needed unlike pointerdown doc comment\n    }\n    this.el.classList.remove('ui-draggable-disabled');\n  }\n  disable(forDestroy = false) {\n    if (this.disabled === true) return;\n    super.disable();\n    this.dragEl.removeEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.dragEl.removeEventListener('touchstart', touchstart);\n      this.dragEl.removeEventListener('pointerdown', pointerdown);\n    }\n    if (!forDestroy) this.el.classList.add('ui-draggable-disabled');\n  }\n  destroy() {\n    if (this.dragTimeout) window.clearTimeout(this.dragTimeout);\n    delete this.dragTimeout;\n    if (this.mouseDownEvent) this._mouseUp(this.mouseDownEvent);\n    this.disable(true);\n    delete this.el;\n    delete this.helper;\n    delete this.option;\n    super.destroy();\n  }\n  updateOption(opts) {\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    return this;\n  }\n  /** @internal call when mouse goes down before a dragstart happens */\n  _mouseDown(e) {\n    // don't let more than one widget handle mouseStart\n    if (DDManager.mouseHandled) return;\n    if (e.button !== 0) return true; // only left click\n    // make sure we are not clicking on known object that handles mouseDown, or ones supplied by the user\n    if (e.target.closest(skipMouseDown)) return true;\n    if (this.option.cancel) {\n      if (e.target.closest(this.option.cancel)) return true;\n    }\n    // REMOVE: why would we get the event if it wasn't for us or child ?\n    // make sure we are clicking on a drag handle or child of it...\n    // Note: we don't need to check that's handle is an immediate child, as mouseHandled will prevent parents from also handling it (lowest wins)\n    // let className = this.option.handle.substring(1);\n    // let el = e.target as HTMLElement;\n    // while (el && !el.classList.contains(className)) { el = el.parentElement; }\n    // if (!el) return;\n    this.mouseDownEvent = e;\n    delete this.dragging;\n    delete DDManager.dragElement;\n    delete DDManager.dropElement;\n    // document handler so we can continue receiving moves as the item is 'fixed' position, and capture=true so WE get a first crack\n    document.addEventListener('mousemove', this._mouseMove, {\n      capture: true,\n      passive: true\n    }); // true=capture, not bubble\n    document.addEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.dragEl.addEventListener('touchmove', touchmove);\n      this.dragEl.addEventListener('touchend', touchend);\n    }\n    e.preventDefault();\n    // preventDefault() prevents blur event which occurs just after mousedown event.\n    // if an editable content has focus, then blur must be call\n    if (document.activeElement) document.activeElement.blur();\n    DDManager.mouseHandled = true;\n    return true;\n  }\n  /** @internal method to call actual drag event */\n  _callDrag(e) {\n    if (!this.dragging) return;\n    const ev = Utils.initEvent(e, {\n      target: this.el,\n      type: 'drag'\n    });\n    if (this.option.drag) {\n      this.option.drag(ev, this.ui());\n    }\n    this.triggerEvent('drag', ev);\n  }\n  /** @internal called when the main page (after successful mousedown) receives a move event to drag the item around the screen */\n  _mouseMove(e) {\n    // console.log(`${count++} move ${e.x},${e.y}`)\n    let s = this.mouseDownEvent;\n    if (this.dragging) {\n      this._dragFollow(e);\n      // delay actual grid handling drag until we pause for a while if set\n      if (DDManager.pauseDrag) {\n        const pause = Number.isInteger(DDManager.pauseDrag) ? DDManager.pauseDrag : 100;\n        if (this.dragTimeout) window.clearTimeout(this.dragTimeout);\n        this.dragTimeout = window.setTimeout(() => this._callDrag(e), pause);\n      } else {\n        this._callDrag(e);\n      }\n    } else if (Math.abs(e.x - s.x) + Math.abs(e.y - s.y) > 3) {\n      /**\n       * don't start unless we've moved at least 3 pixels\n       */\n      this.dragging = true;\n      DDManager.dragElement = this;\n      // if we're dragging an actual grid item, set the current drop as the grid (to detect enter/leave)\n      let grid = this.el.gridstackNode?.grid;\n      if (grid) {\n        DDManager.dropElement = grid.el.ddElement.ddDroppable;\n      } else {\n        delete DDManager.dropElement;\n      }\n      this.helper = this._createHelper(e);\n      this._setupHelperContainmentStyle();\n      this.dragTransform = Utils.getValuesFromTransformedElement(this.helperContainment);\n      this.dragOffset = this._getDragOffset(e, this.el, this.helperContainment);\n      const ev = Utils.initEvent(e, {\n        target: this.el,\n        type: 'dragstart'\n      });\n      this._setupHelperStyle(e);\n      if (this.option.start) {\n        this.option.start(ev, this.ui());\n      }\n      this.triggerEvent('dragstart', ev);\n    }\n    // e.preventDefault(); // passive = true. OLD: was needed otherwise we get text sweep text selection as we drag around\n    return true;\n  }\n  /** @internal call when the mouse gets released to drop the item at current location */\n  _mouseUp(e) {\n    document.removeEventListener('mousemove', this._mouseMove, true);\n    document.removeEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.dragEl.removeEventListener('touchmove', touchmove, true);\n      this.dragEl.removeEventListener('touchend', touchend, true);\n    }\n    if (this.dragging) {\n      delete this.dragging;\n      // reset the drop target if dragging over ourself (already parented, just moving during stop callback below)\n      if (DDManager.dropElement?.el === this.el.parentElement) {\n        delete DDManager.dropElement;\n      }\n      this.helperContainment.style.position = this.parentOriginStylePosition || null;\n      if (this.helper === this.el) {\n        this._removeHelperStyle();\n      } else {\n        this.helper.remove();\n      }\n      const ev = Utils.initEvent(e, {\n        target: this.el,\n        type: 'dragstop'\n      });\n      if (this.option.stop) {\n        this.option.stop(ev); // NOTE: destroy() will be called when removing item, so expect NULL ptr after!\n      }\n      this.triggerEvent('dragstop', ev);\n      // call the droppable method to receive the item\n      if (DDManager.dropElement) {\n        DDManager.dropElement.drop(e);\n      }\n    }\n    delete this.helper;\n    delete this.mouseDownEvent;\n    delete DDManager.dragElement;\n    delete DDManager.dropElement;\n    delete DDManager.mouseHandled;\n    e.preventDefault();\n  }\n  /** @internal create a clone copy (or user defined method) of the original drag item if set */\n  _createHelper(event) {\n    let helper = this.el;\n    if (typeof this.option.helper === 'function') {\n      helper = this.option.helper(event);\n    } else if (this.option.helper === 'clone') {\n      helper = Utils.cloneNode(this.el);\n    }\n    if (!document.body.contains(helper)) {\n      Utils.appendTo(helper, this.option.appendTo === 'parent' ? this.el.parentElement : this.option.appendTo);\n    }\n    if (helper === this.el) {\n      this.dragElementOriginStyle = DDDraggable.originStyleProp.map(prop => this.el.style[prop]);\n    }\n    return helper;\n  }\n  /** @internal set the fix position of the dragged item */\n  _setupHelperStyle(e) {\n    this.helper.classList.add('ui-draggable-dragging');\n    // TODO: set all at once with style.cssText += ... ? https://stackoverflow.com/questions/3968593\n    const style = this.helper.style;\n    style.pointerEvents = 'none'; // needed for over items to get enter/leave\n    // style.cursor = 'move'; //  TODO: can't set with pointerEvents=none ! (done in CSS as well)\n    style.width = this.dragOffset.width + 'px';\n    style.height = this.dragOffset.height + 'px';\n    style.willChange = 'left, top';\n    style.position = 'fixed'; // let us drag between grids by not clipping as parent .grid-stack is position: 'relative'\n    this._dragFollow(e); // now position it\n    style.transition = 'none'; // show up instantly\n    setTimeout(() => {\n      if (this.helper) {\n        style.transition = null; // recover animation\n      }\n    }, 0);\n    return this;\n  }\n  /** @internal restore back the original style before dragging */\n  _removeHelperStyle() {\n    this.helper.classList.remove('ui-draggable-dragging');\n    let node = this.helper?.gridstackNode;\n    // don't bother restoring styles if we're gonna remove anyway...\n    if (!node?._isAboutToRemove && this.dragElementOriginStyle) {\n      let helper = this.helper;\n      // don't animate, otherwise we animate offseted when switching back to 'absolute' from 'fixed'.\n      // TODO: this also removes resizing animation which doesn't have this issue, but others.\n      // Ideally both would animate ('move' would immediately restore 'absolute' and adjust coordinate to match,\n      // then trigger a delay (repaint) to restore to final dest with animate) but then we need to make sure 'resizestop'\n      // is called AFTER 'transitionend' event is received (see https://github.com/gridstack/gridstack.js/issues/2033)\n      let transition = this.dragElementOriginStyle['transition'] || null;\n      helper.style.transition = this.dragElementOriginStyle['transition'] = 'none'; // can't be NULL #1973\n      DDDraggable.originStyleProp.forEach(prop => helper.style[prop] = this.dragElementOriginStyle[prop] || null);\n      setTimeout(() => helper.style.transition = transition, 50); // recover animation from saved vars after a pause (0 isn't enough #1973)\n    }\n    delete this.dragElementOriginStyle;\n    return this;\n  }\n  /** @internal updates the top/left position to follow the mouse */\n  _dragFollow(e) {\n    let containmentRect = {\n      left: 0,\n      top: 0\n    };\n    // if (this.helper.style.position === 'absolute') { // we use 'fixed'\n    //   const { left, top } = this.helperContainment.getBoundingClientRect();\n    //   containmentRect = { left, top };\n    // }\n    const style = this.helper.style;\n    const offset = this.dragOffset;\n    style.left = (e.clientX + offset.offsetLeft - containmentRect.left) * this.dragTransform.xScale + 'px';\n    style.top = (e.clientY + offset.offsetTop - containmentRect.top) * this.dragTransform.yScale + 'px';\n  }\n  /** @internal */\n  _setupHelperContainmentStyle() {\n    this.helperContainment = this.helper.parentElement;\n    if (this.helper.style.position !== 'fixed') {\n      this.parentOriginStylePosition = this.helperContainment.style.position;\n      if (getComputedStyle(this.helperContainment).position.match(/static/)) {\n        this.helperContainment.style.position = 'relative';\n      }\n    }\n    return this;\n  }\n  /** @internal */\n  _getDragOffset(event, el, parent) {\n    // in case ancestor has transform/perspective css properties that change the viewpoint\n    let xformOffsetX = 0;\n    let xformOffsetY = 0;\n    if (parent) {\n      xformOffsetX = this.dragTransform.xOffset;\n      xformOffsetY = this.dragTransform.yOffset;\n    }\n    const targetOffset = el.getBoundingClientRect();\n    return {\n      left: targetOffset.left,\n      top: targetOffset.top,\n      offsetLeft: -event.clientX + targetOffset.left - xformOffsetX,\n      offsetTop: -event.clientY + targetOffset.top - xformOffsetY,\n      width: targetOffset.width * this.dragTransform.xScale,\n      height: targetOffset.height * this.dragTransform.yScale\n    };\n  }\n  /** @internal TODO: set to public as called by DDDroppable! */\n  ui() {\n    const containmentEl = this.el.parentElement;\n    const containmentRect = containmentEl.getBoundingClientRect();\n    const offset = this.helper.getBoundingClientRect();\n    return {\n      position: {\n        top: (offset.top - containmentRect.top) * this.dragTransform.yScale,\n        left: (offset.left - containmentRect.left) * this.dragTransform.xScale\n      }\n      /* not used by GridStack for now...\n      helper: [this.helper], //The object arr representing the helper that's being dragged.\n      offset: { top: offset.top, left: offset.left } // Current offset position of the helper as { top, left } object.\n      */\n    };\n  }\n}\n/** @internal properties we change during dragging, and restore back */\nDDDraggable.originStyleProp = ['transition', 'pointerEvents', 'position', 'left', 'top', 'minWidth', 'willChange'];\nexport { DDDraggable };","map":{"version":3,"names":["DDManager","Utils","DDBaseImplement","isTouch","touchend","touchmove","touchstart","pointerdown","skipMouseDown","DDDraggable","constructor","el","option","dragTransform","xScale","yScale","xOffset","yOffset","handleName","handle","substring","dragEl","classList","contains","querySelector","_mouseDown","bind","_mouseMove","_mouseUp","enable","on","event","callback","off","disabled","addEventListener","remove","disable","forDestroy","removeEventListener","add","destroy","dragTimeout","window","clearTimeout","mouseDownEvent","helper","updateOption","opts","Object","keys","forEach","key","e","mouseHandled","button","target","closest","cancel","dragging","dragElement","dropElement","document","capture","passive","preventDefault","activeElement","blur","_callDrag","ev","initEvent","type","drag","ui","triggerEvent","s","_dragFollow","pauseDrag","pause","Number","isInteger","setTimeout","Math","abs","x","y","grid","gridstackNode","ddElement","ddDroppable","_createHelper","_setupHelperContainmentStyle","getValuesFromTransformedElement","helperContainment","dragOffset","_getDragOffset","_setupHelperStyle","start","parentElement","style","position","parentOriginStylePosition","_removeHelperStyle","stop","drop","cloneNode","body","appendTo","dragElementOriginStyle","originStyleProp","map","prop","pointerEvents","width","height","willChange","transition","node","_isAboutToRemove","containmentRect","left","top","offset","clientX","offsetLeft","clientY","offsetTop","getComputedStyle","match","parent","xformOffsetX","xformOffsetY","targetOffset","getBoundingClientRect","containmentEl"],"sources":["/Users/luis01/Desktop/MATINF/Asignaturas/Proyecto_Software/battleship/app_web/frontend/node_modules/gridstack/src/dd-draggable.ts"],"sourcesContent":["/**\n * dd-draggable.ts 10.1.1\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\n\nimport { DDManager } from './dd-manager';\nimport { DragTransform, Utils } from './utils';\nimport { DDBaseImplement, HTMLElementExtendOpt } from './dd-base-impl';\nimport { GridItemHTMLElement, DDUIData } from './types';\nimport { DDElementHost } from './dd-element';\nimport { isTouch, touchend, touchmove, touchstart, pointerdown } from './dd-touch';\n\n// TODO: merge with DDDragOpt ?\nexport interface DDDraggableOpt {\n  appendTo?: string | HTMLElement;\n  handle?: string;\n  helper?: 'clone' | HTMLElement | ((event: Event) => HTMLElement);\n  cancel?: string;\n  // containment?: string | HTMLElement; // TODO: not implemented yet\n  // revert?: string | boolean | unknown; // TODO: not implemented yet\n  // scroll?: boolean;\n  start?: (event: Event, ui: DDUIData) => void;\n  stop?: (event: Event) => void;\n  drag?: (event: Event, ui: DDUIData) => void;\n}\n\ninterface DragOffset {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  offsetLeft: number;\n  offsetTop: number;\n}\n\ntype DDDragEvent = 'drag' | 'dragstart' | 'dragstop';\n\n// make sure we are not clicking on known object that handles mouseDown\nconst skipMouseDown = 'input,textarea,button,select,option,[contenteditable=\"true\"],.ui-resizable-handle';\n\n// let count = 0; // TEST\n\nexport class DDDraggable extends DDBaseImplement implements HTMLElementExtendOpt<DDDraggableOpt> {\n  public helper: HTMLElement; // used by GridStackDDNative\n\n  /** @internal */\n  protected mouseDownEvent: MouseEvent;\n  /** @internal */\n  protected dragOffset: DragOffset;\n  /** @internal */\n  protected dragElementOriginStyle: Array<string>;\n  /** @internal */\n  protected dragEl: HTMLElement;\n  /** @internal true while we are dragging an item around */\n  protected dragging: boolean;\n  /** @internal */\n  protected parentOriginStylePosition: string;\n  /** @internal */\n  protected helperContainment: HTMLElement;\n  /** @internal properties we change during dragging, and restore back */\n  protected static originStyleProp = ['transition', 'pointerEvents', 'position', 'left', 'top', 'minWidth', 'willChange'];\n  /** @internal pause before we call the actual drag hit collision code */\n  protected dragTimeout: number;\n  /** @internal */\n  protected dragTransform: DragTransform = {\n    xScale: 1,\n    yScale: 1,\n    xOffset: 0,\n    yOffset: 0\n  };\n\n  constructor(public el: HTMLElement, public option: DDDraggableOpt = {}) {\n    super();\n\n    // get the element that is actually supposed to be dragged by\n    let handleName = option.handle.substring(1);\n    this.dragEl = el.classList.contains(handleName) ? el : el.querySelector(option.handle) || el;\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseDown = this._mouseDown.bind(this);\n    this._mouseMove = this._mouseMove.bind(this);\n    this._mouseUp = this._mouseUp.bind(this);\n    this.enable();\n  }\n\n  public on(event: DDDragEvent, callback: (event: DragEvent) => void): void {\n    super.on(event, callback);\n  }\n\n  public off(event: DDDragEvent): void {\n    super.off(event);\n  }\n\n  public enable(): void {\n    if (this.disabled === false) return;\n    super.enable();\n    this.dragEl.addEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.dragEl.addEventListener('touchstart', touchstart);\n      this.dragEl.addEventListener('pointerdown', pointerdown);\n      // this.dragEl.style.touchAction = 'none'; // not needed unlike pointerdown doc comment\n    }\n    this.el.classList.remove('ui-draggable-disabled');\n  }\n\n  public disable(forDestroy = false): void {\n    if (this.disabled === true) return;\n    super.disable();\n    this.dragEl.removeEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.dragEl.removeEventListener('touchstart', touchstart);\n      this.dragEl.removeEventListener('pointerdown', pointerdown);\n    }\n    if (!forDestroy) this.el.classList.add('ui-draggable-disabled');\n  }\n\n  public destroy(): void {\n    if (this.dragTimeout) window.clearTimeout(this.dragTimeout);\n    delete this.dragTimeout;\n    if (this.mouseDownEvent) this._mouseUp(this.mouseDownEvent);\n    this.disable(true);\n    delete this.el;\n    delete this.helper;\n    delete this.option;\n    super.destroy();\n  }\n\n  public updateOption(opts: DDDraggableOpt): DDDraggable {\n    Object.keys(opts).forEach(key => this.option[key] = opts[key]);\n    return this;\n  }\n\n  /** @internal call when mouse goes down before a dragstart happens */\n  protected _mouseDown(e: MouseEvent): boolean {\n    // don't let more than one widget handle mouseStart\n    if (DDManager.mouseHandled) return;\n    if (e.button !== 0) return true; // only left click\n\n    // make sure we are not clicking on known object that handles mouseDown, or ones supplied by the user\n    if ((e.target as HTMLElement).closest(skipMouseDown)) return true;\n    if (this.option.cancel) {\n      if ((e.target as HTMLElement).closest(this.option.cancel)) return true;\n    }\n\n    // REMOVE: why would we get the event if it wasn't for us or child ?\n    // make sure we are clicking on a drag handle or child of it...\n    // Note: we don't need to check that's handle is an immediate child, as mouseHandled will prevent parents from also handling it (lowest wins)\n    // let className = this.option.handle.substring(1);\n    // let el = e.target as HTMLElement;\n    // while (el && !el.classList.contains(className)) { el = el.parentElement; }\n    // if (!el) return;\n\n    this.mouseDownEvent = e;\n    delete this.dragging;\n    delete DDManager.dragElement;\n    delete DDManager.dropElement;\n    // document handler so we can continue receiving moves as the item is 'fixed' position, and capture=true so WE get a first crack\n    document.addEventListener('mousemove', this._mouseMove, { capture: true, passive: true}); // true=capture, not bubble\n    document.addEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.dragEl.addEventListener('touchmove', touchmove);\n      this.dragEl.addEventListener('touchend', touchend);\n    }\n\n    e.preventDefault();\n    // preventDefault() prevents blur event which occurs just after mousedown event.\n    // if an editable content has focus, then blur must be call\n    if (document.activeElement) (document.activeElement as HTMLElement).blur();\n\n    DDManager.mouseHandled = true;\n    return true;\n  }\n\n  /** @internal method to call actual drag event */\n  protected _callDrag(e: DragEvent): void {\n    if (!this.dragging) return;\n    const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'drag' });\n    if (this.option.drag) {\n      this.option.drag(ev, this.ui());\n    }\n    this.triggerEvent('drag', ev);\n  }\n\n  /** @internal called when the main page (after successful mousedown) receives a move event to drag the item around the screen */\n  protected _mouseMove(e: DragEvent): boolean {\n    // console.log(`${count++} move ${e.x},${e.y}`)\n    let s = this.mouseDownEvent;\n\n    if (this.dragging) {\n      this._dragFollow(e);\n      // delay actual grid handling drag until we pause for a while if set\n      if (DDManager.pauseDrag) {\n        const pause = Number.isInteger(DDManager.pauseDrag) ? DDManager.pauseDrag as number : 100;\n        if (this.dragTimeout) window.clearTimeout(this.dragTimeout);\n        this.dragTimeout = window.setTimeout(() => this._callDrag(e), pause);\n      } else {\n        this._callDrag(e);\n      }\n    } else if (Math.abs(e.x - s.x) + Math.abs(e.y - s.y) > 3) {\n      /**\n       * don't start unless we've moved at least 3 pixels\n       */\n      this.dragging = true;\n      DDManager.dragElement = this;\n      // if we're dragging an actual grid item, set the current drop as the grid (to detect enter/leave)\n      let grid = (this.el as GridItemHTMLElement).gridstackNode?.grid;\n      if (grid) {\n        DDManager.dropElement = (grid.el as DDElementHost).ddElement.ddDroppable;\n      } else {\n        delete DDManager.dropElement;\n      }\n      this.helper = this._createHelper(e);\n      this._setupHelperContainmentStyle();\n      this.dragTransform = Utils.getValuesFromTransformedElement(\n        this.helperContainment\n      );\n      this.dragOffset = this._getDragOffset(e, this.el, this.helperContainment);\n      const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'dragstart' });\n\n      this._setupHelperStyle(e);\n      if (this.option.start) {\n        this.option.start(ev, this.ui());\n      }\n      this.triggerEvent('dragstart', ev);\n    }\n    // e.preventDefault(); // passive = true. OLD: was needed otherwise we get text sweep text selection as we drag around\n    return true;\n  }\n\n  /** @internal call when the mouse gets released to drop the item at current location */\n  protected _mouseUp(e: MouseEvent): void {\n    document.removeEventListener('mousemove', this._mouseMove, true);\n    document.removeEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.dragEl.removeEventListener('touchmove', touchmove, true);\n      this.dragEl.removeEventListener('touchend', touchend, true);\n    }\n    if (this.dragging) {\n      delete this.dragging;\n\n      // reset the drop target if dragging over ourself (already parented, just moving during stop callback below)\n      if (DDManager.dropElement?.el === this.el.parentElement) {\n        delete DDManager.dropElement;\n      }\n\n      this.helperContainment.style.position = this.parentOriginStylePosition || null;\n      if (this.helper === this.el) {\n        this._removeHelperStyle();\n      } else {\n        this.helper.remove();\n      }\n      const ev = Utils.initEvent<DragEvent>(e, { target: this.el, type: 'dragstop' });\n      if (this.option.stop) {\n        this.option.stop(ev); // NOTE: destroy() will be called when removing item, so expect NULL ptr after!\n      }\n      this.triggerEvent('dragstop', ev);\n\n      // call the droppable method to receive the item\n      if (DDManager.dropElement) {\n        DDManager.dropElement.drop(e);\n      }\n    }\n    delete this.helper;\n    delete this.mouseDownEvent;\n    delete DDManager.dragElement;\n    delete DDManager.dropElement;\n    delete DDManager.mouseHandled;\n    e.preventDefault();\n  }\n\n  /** @internal create a clone copy (or user defined method) of the original drag item if set */\n  protected _createHelper(event: DragEvent): HTMLElement {\n    let helper = this.el;\n    if (typeof this.option.helper === 'function') {\n      helper = this.option.helper(event);\n    } else if (this.option.helper === 'clone') {\n      helper = Utils.cloneNode(this.el);\n    }\n    if (!document.body.contains(helper)) {\n      Utils.appendTo(helper, this.option.appendTo === 'parent' ? this.el.parentElement : this.option.appendTo);\n    }\n    if (helper === this.el) {\n      this.dragElementOriginStyle = DDDraggable.originStyleProp.map(prop => this.el.style[prop]);\n    }\n    return helper;\n  }\n\n  /** @internal set the fix position of the dragged item */\n  protected _setupHelperStyle(e: DragEvent): DDDraggable {\n    this.helper.classList.add('ui-draggable-dragging');\n    // TODO: set all at once with style.cssText += ... ? https://stackoverflow.com/questions/3968593\n    const style = this.helper.style;\n    style.pointerEvents = 'none'; // needed for over items to get enter/leave\n    // style.cursor = 'move'; //  TODO: can't set with pointerEvents=none ! (done in CSS as well)\n    style.width = this.dragOffset.width + 'px';\n    style.height = this.dragOffset.height + 'px';\n    style.willChange = 'left, top';\n    style.position = 'fixed'; // let us drag between grids by not clipping as parent .grid-stack is position: 'relative'\n    this._dragFollow(e); // now position it\n    style.transition = 'none'; // show up instantly\n    setTimeout(() => {\n      if (this.helper) {\n        style.transition = null; // recover animation\n      }\n    }, 0);\n    return this;\n  }\n\n  /** @internal restore back the original style before dragging */\n  protected _removeHelperStyle(): DDDraggable {\n    this.helper.classList.remove('ui-draggable-dragging');\n    let node = (this.helper as GridItemHTMLElement)?.gridstackNode;\n    // don't bother restoring styles if we're gonna remove anyway...\n    if (!node?._isAboutToRemove && this.dragElementOriginStyle) {\n      let helper = this.helper;\n      // don't animate, otherwise we animate offseted when switching back to 'absolute' from 'fixed'.\n      // TODO: this also removes resizing animation which doesn't have this issue, but others.\n      // Ideally both would animate ('move' would immediately restore 'absolute' and adjust coordinate to match,\n      // then trigger a delay (repaint) to restore to final dest with animate) but then we need to make sure 'resizestop'\n      // is called AFTER 'transitionend' event is received (see https://github.com/gridstack/gridstack.js/issues/2033)\n      let transition = this.dragElementOriginStyle['transition'] || null;\n      helper.style.transition = this.dragElementOriginStyle['transition'] = 'none'; // can't be NULL #1973\n      DDDraggable.originStyleProp.forEach(prop => helper.style[prop] = this.dragElementOriginStyle[prop] || null);\n      setTimeout(() => helper.style.transition = transition, 50); // recover animation from saved vars after a pause (0 isn't enough #1973)\n    }\n    delete this.dragElementOriginStyle;\n    return this;\n  }\n\n  /** @internal updates the top/left position to follow the mouse */\n  protected _dragFollow(e: DragEvent): void {\n    let containmentRect = { left: 0, top: 0 };\n    // if (this.helper.style.position === 'absolute') { // we use 'fixed'\n    //   const { left, top } = this.helperContainment.getBoundingClientRect();\n    //   containmentRect = { left, top };\n    // }\n    const style = this.helper.style;\n    const offset = this.dragOffset;\n    style.left = (e.clientX + offset.offsetLeft - containmentRect.left) * this.dragTransform.xScale + 'px';\n    style.top = (e.clientY + offset.offsetTop - containmentRect.top) * this.dragTransform.yScale + 'px';\n  }\n\n  /** @internal */\n  protected _setupHelperContainmentStyle(): DDDraggable {\n    this.helperContainment = this.helper.parentElement;\n    if (this.helper.style.position !== 'fixed') {\n      this.parentOriginStylePosition = this.helperContainment.style.position;\n      if (getComputedStyle(this.helperContainment).position.match(/static/)) {\n        this.helperContainment.style.position = 'relative';\n      }\n    }\n    return this;\n  }\n\n  /** @internal */\n  protected _getDragOffset(event: DragEvent, el: HTMLElement, parent: HTMLElement): DragOffset {\n\n    // in case ancestor has transform/perspective css properties that change the viewpoint\n    let xformOffsetX = 0;\n    let xformOffsetY = 0;\n    if (parent) {\n      xformOffsetX = this.dragTransform.xOffset;\n      xformOffsetY = this.dragTransform.yOffset;\n    }\n\n    const targetOffset = el.getBoundingClientRect();\n    return {\n      left: targetOffset.left,\n      top: targetOffset.top,\n      offsetLeft: - event.clientX + targetOffset.left - xformOffsetX,\n      offsetTop: - event.clientY + targetOffset.top - xformOffsetY,\n      width: targetOffset.width * this.dragTransform.xScale,\n      height: targetOffset.height * this.dragTransform.yScale\n    };\n  }\n\n  /** @internal TODO: set to public as called by DDDroppable! */\n  public ui(): DDUIData {\n    const containmentEl = this.el.parentElement;\n    const containmentRect = containmentEl.getBoundingClientRect();\n    const offset = this.helper.getBoundingClientRect();\n    return {\n      position: { //Current CSS position of the helper as { top, left } object\n        top: (offset.top - containmentRect.top) * this.dragTransform.yScale,\n        left: (offset.left - containmentRect.left) * this.dragTransform.xScale\n      }\n      /* not used by GridStack for now...\n      helper: [this.helper], //The object arr representing the helper that's being dragged.\n      offset: { top: offset.top, left: offset.left } // Current offset position of the helper as { top, left } object.\n      */\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}